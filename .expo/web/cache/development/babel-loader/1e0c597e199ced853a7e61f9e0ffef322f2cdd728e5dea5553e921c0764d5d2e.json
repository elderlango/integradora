{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Card } from 'react-native-elements';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport styles from \"./cardsScreen.styles\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\nimport BackButton from \"../../components/backButtonc\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { ThemeContext } from \"../../components/theme/themeManager\";\nimport FontAwesome5 from \"@expo/vector-icons/FontAwesome5\";\nimport Menu from \"../../components/menu/menu\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar categories = ['TODOS', 'GAS', 'ULTRASONICO', 'TEMPERATURA', 'HUMEDAD'];\nvar categoriesIcon = ['layer-group', 'cloud', 'wave-square', 'temperature-high', 'water'];\nvar categoriesIconColor = ['#DE784E', '#A8A6AC', '#ffd128', '#FF5AA0', '#34c1fd'];\nvar CardsScreen = function CardsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState('TODOS'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedCategory = _useState4[0],\n    setSelectedCategory = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    menuVisible = _useState10[0],\n    setMenuVisible = _useState10[1];\n  var menuPosition = useRef(new Animated.ValueXY()).current;\n  var panResponder = useRef(PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderMove: function onPanResponderMove(event, gesture) {\n      menuPosition.setValue({\n        x: gesture.dx,\n        y: gesture.dy\n      });\n    },\n    onPanResponderRelease: function onPanResponderRelease(event, gesture) {\n      if (gesture.dx > 50) {\n        setMenuVisible(true);\n      } else {\n        setMenuVisible(false);\n      }\n      Animated.spring(menuPosition, {\n        toValue: {\n          x: 0,\n          y: 0\n        },\n        useNativeDriver: false\n      }).start();\n    }\n  })).current;\n  var sensorTypeMapping = {\n    'TODOS': ['gasDetector', 'ultrasonic', 'temperature', 'humidity'],\n    'GAS': 'gasDetector',\n    'ULTRASONICO': 'ultrasonic',\n    'TEMPERATURA': 'temperature',\n    'HUMEDAD': 'humidity'\n  };\n  useEffect(function () {\n    var loadSensorAlerts = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        setIsLoading(true);\n        setError('');\n        try {\n          var userToken = yield AsyncStorage.getItem('userToken');\n          var userId = yield AsyncStorage.getItem('userId');\n          if (!userToken || !userId) {\n            throw new Error('User token or user ID not available');\n          }\n          var deviceResponse = yield axios.get(`http://${global.ipDireccion}:3000/api/devices/byAdmin`, {\n            headers: {\n              Authorization: `Bearer ${userToken}`\n            }\n          });\n          if (deviceResponse.data.length === 0) {\n            throw new Error('No devices found for this user');\n          }\n          var deviceId = deviceResponse.data[0]._id;\n          var mappedSensorTypes = selectedCategory === 'TODOS' ? sensorTypeMapping['TODOS'] : [sensorTypeMapping[selectedCategory]];\n          var allAlerts = [];\n          var _loop = function* _loop(sensorType) {\n            console.log(deviceId);\n            var alertsResponse = yield axios.get(`http://${global.ipDireccion}:3000/api/devices/${deviceId}/sensors/${sensorType}/alerts`, {\n              headers: {\n                Authorization: `Bearer ${userToken}`\n              }\n            });\n            var sensorAlerts = alertsResponse.data.map(function (alert) {\n              return _objectSpread(_objectSpread({}, alert), {}, {\n                id: alert._id,\n                category: sensorType.toUpperCase(),\n                alertType: alert.messageType,\n                value: alert.message\n              });\n            });\n            allAlerts = [].concat(_toConsumableArray(allAlerts), _toConsumableArray(sensorAlerts));\n          };\n          for (var sensorType of mappedSensorTypes) {\n            yield* _loop(sensorType);\n          }\n          setMessages(allAlerts);\n        } catch (error) {\n          console.error('Error fetching sensor alerts:', error);\n          setError(error.message || 'An error occurred');\n        } finally {\n          setIsLoading(false);\n        }\n      });\n      return function loadSensorAlerts() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    loadSensorAlerts();\n  }, [selectedCategory]);\n  var handleCategorySelect = function handleCategorySelect(category) {\n    setSelectedCategory(category);\n  };\n  var filteredMessages = messages;\n  var _useContext = useContext(ThemeContext),\n    theme = _useContext.theme;\n  var dark = '../../assets/images/tile_background4.png';\n  var light = '../../assets/images/tile_background9.png';\n  return _jsx(SafeAreaView, {\n    style: _objectSpread(_objectSpread(_objectSpread({}, styles.safeArea), styles.backgroundImage), styles.container),\n    children: _jsxs(ImageBackground, {\n      source: theme === 'light' ? require(light) : require(dark),\n      style: _objectSpread(_objectSpread({}, styles.backgroundImage), styles.container),\n      children: [_jsx(Header, {\n        navigation: navigation,\n        panResponder: panResponder\n      }), menuVisible && _jsx(Menu, {\n        navigation: navigation,\n        style: menuPosition.getLayout(),\n        onClose: function onClose(isVisible) {\n          return setMenuVisible(isVisible);\n        }\n      }), _jsx(CategoriesMenu, {\n        categories: categories,\n        categoriesIcon: categoriesIcon,\n        categoriesIconColor: categoriesIconColor,\n        selectedCategory: selectedCategory,\n        onSelectCategory: handleCategorySelect\n      }), _jsx(FlatList, {\n        data: filteredMessages,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return _jsx(OfferCard, _objectSpread({}, item));\n        }\n      })]\n    })\n  });\n};\nvar Header = function Header(_ref4) {\n  var navigation = _ref4.navigation,\n    panResponder = _ref4.panResponder;\n  return _jsxs(View, _objectSpread(_objectSpread({\n    style: styles.headerContainer\n  }, panResponder.panHandlers), {}, {\n    children: [_jsx(View, {\n      style: styles.headerContainer,\n      children: _jsx(Text, {\n        style: styles.headerTitle,\n        children: \"Estados y Avisos\"\n      })\n    }), _jsx(BackButton, {\n      navigation: navigation\n    })]\n  }));\n};\nvar CategoriesMenu = function CategoriesMenu(_ref5) {\n  var categories = _ref5.categories,\n    selectedCategory = _ref5.selectedCategory,\n    categoriesIcon = _ref5.categoriesIcon,\n    categoriesIconColor = _ref5.categoriesIconColor,\n    onSelectCategory = _ref5.onSelectCategory;\n  return _jsx(ScrollView, {\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    contentContainerStyle: styles.categoriesContainer,\n    children: categories.map(function (category) {\n      var iconName = categoriesIcon[categories.indexOf(category)];\n      var iconColor = categoriesIconColor[categories.indexOf(category)];\n      return _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return onSelectCategory(category);\n        },\n        style: [styles.categoryButton, selectedCategory === category && _objectSpread(_objectSpread({}, styles.categoryButtonSelected), {}, {\n          borderBottomColor: iconColor\n        })],\n        children: [_jsx(Text, {\n          style: [styles.categoryButtonText, selectedCategory === category && _objectSpread(_objectSpread({}, styles.categoryButtonTextSelected), {}, {\n            color: iconColor\n          })],\n          children: category\n        }), _jsx(View, {\n          style: [styles.categoryIcon, selectedCategory === category && _objectSpread(_objectSpread({}, styles.categoryIconSelected), {}, {\n            shadowColor: '#ffd128'\n          })],\n          children: _jsx(FontAwesome5, {\n            name: iconName,\n            size: 30,\n            color: iconColor\n          })\n        })]\n      }, category);\n    })\n  });\n};\nvar getAlertStyles = function getAlertStyles(alertType) {\n  switch (alertType) {\n    case \"Alerta\":\n      return {\n        borderColor: '#fb5b5a',\n        icon: 'times-rectangle',\n        backgroundColor: '#fb5b5a',\n        iconColor: '#fb5b5a',\n        buttonText: 'Resolver'\n      };\n    case \"Advertencia\":\n      return {\n        borderColor: '#F5BE2E',\n        icon: 'warning',\n        backgroundColor: '#F5BE2E',\n        iconColor: '#F5BE2E',\n        buttonText: 'Detalles'\n      };\n    case \"Error\":\n      return {\n        borderColor: '#6A969D',\n        icon: 'bug',\n        backgroundColor: '#6A969D',\n        iconColor: '#6A969D',\n        buttonText: 'Más Info'\n      };\n    default:\n      return {\n        borderColor: 'grey',\n        icon: 'question-circle',\n        buttonText: ''\n      };\n  }\n};\nvar OfferCard = function OfferCard(_ref6) {\n  var id = _ref6.id,\n    category = _ref6.category,\n    alertType = _ref6.alertType,\n    value = _ref6.value,\n    timestamp = _ref6.timestamp;\n  var _getAlertStyles = getAlertStyles(alertType),\n    borderColor = _getAlertStyles.borderColor,\n    icon = _getAlertStyles.icon,\n    iconColor = _getAlertStyles.iconColor,\n    backgroundColor = _getAlertStyles.backgroundColor,\n    buttonText = _getAlertStyles.buttonText;\n  var formattedTimestamp = new Date(timestamp).toLocaleString();\n  var humanReadableCategory = {\n    gasdetector: 'GAS',\n    ultrasonic: 'ULTRASONICO',\n    temperature: 'TEMPERATURA',\n    humidity: 'HUMEDAD'\n  }[category.toLowerCase()] || 'Desconocido';\n  return _jsxs(Card, {\n    containerStyle: [styles.cardContainer, {\n      borderColor: borderColor\n    }],\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center'\n      },\n      children: [_jsx(Icon, {\n        name: icon,\n        size: 40,\n        color: iconColor\n      }), _jsxs(View, {\n        style: {\n          marginLeft: 10\n        },\n        children: [_jsx(Text, {\n          style: styles.cardTimestamp,\n          children: formattedTimestamp\n        }), _jsx(Text, {\n          style: styles.cardTitle,\n          children: humanReadableCategory\n        }), _jsx(Text, {\n          style: styles.cardValue,\n          children: value\n        }), _jsx(Text, {\n          style: styles.cardValue,\n          children: alertType\n        })]\n      })]\n    }), buttonText && _jsx(TouchableOpacity, {\n      style: [styles.cardActionButton, {\n        backgroundColor: backgroundColor\n      }],\n      children: _jsx(Text, {\n        style: styles.cardActionButtonText,\n        children: buttonText\n      })\n    })]\n  });\n};\nvar copyToClipboard = function copyToClipboard(code) {\n  console.log(`Código ${code} copiado al portapapeles`);\n};\nexport default CardsScreen;","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","SafeAreaView","View","Text","FlatList","TouchableOpacity","ScrollView","ImageBackground","PanResponder","Animated","Card","Icon","styles","AsyncStorage","axios","BackButton","LinearGradient","ThemeContext","FontAwesome5","Menu","jsx","_jsx","jsxs","_jsxs","categories","categoriesIcon","categoriesIconColor","CardsScreen","_ref","navigation","_useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","selectedCategory","setSelectedCategory","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","error","setError","_useState9","_useState10","menuVisible","setMenuVisible","menuPosition","ValueXY","current","panResponder","create","onStartShouldSetPanResponder","onPanResponderMove","event","gesture","setValue","x","dx","y","dy","onPanResponderRelease","spring","toValue","useNativeDriver","start","sensorTypeMapping","loadSensorAlerts","_ref2","_asyncToGenerator","userToken","getItem","userId","Error","deviceResponse","get","global","ipDireccion","headers","Authorization","data","length","deviceId","_id","mappedSensorTypes","allAlerts","_loop","sensorType","console","log","alertsResponse","sensorAlerts","map","alert","_objectSpread","id","category","toUpperCase","alertType","messageType","value","message","concat","_toConsumableArray","apply","arguments","handleCategorySelect","filteredMessages","_useContext","theme","dark","light","style","safeArea","backgroundImage","container","children","source","require","Header","getLayout","onClose","isVisible","CategoriesMenu","onSelectCategory","keyExtractor","item","renderItem","_ref3","OfferCard","_ref4","headerContainer","panHandlers","headerTitle","_ref5","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","categoriesContainer","iconName","indexOf","iconColor","onPress","categoryButton","categoryButtonSelected","borderBottomColor","categoryButtonText","categoryButtonTextSelected","color","categoryIcon","categoryIconSelected","shadowColor","name","size","getAlertStyles","borderColor","icon","backgroundColor","buttonText","_ref6","timestamp","_getAlertStyles","formattedTimestamp","Date","toLocaleString","humanReadableCategory","gasdetector","ultrasonic","temperature","humidity","toLowerCase","containerStyle","cardContainer","flexDirection","alignItems","marginLeft","cardTimestamp","cardTitle","cardValue","cardActionButton","cardActionButtonText","copyToClipboard","code"],"sources":["C:/Users/lofli/Downloads/integradora-misto/views/cards/cardsScreen.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { SafeAreaView, View, Text, FlatList, TouchableOpacity, ScrollView, ImageBackground, PanResponder,Animated } from 'react-native';\nimport { Card } from 'react-native-elements';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport styles from './cardsScreen.styles';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\nimport BackButton from '../../components/backButtonc';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { ThemeContext } from \"../../components/theme/themeManager\";\nimport FontAwesome5 from 'react-native-vector-icons/FontAwesome5';\nimport Menu from '../../components/menu/menu';\n\nconst categories = ['TODOS', 'GAS', 'ULTRASONICO', 'TEMPERATURA', 'HUMEDAD'];\nconst categoriesIcon = ['layer-group','cloud', 'wave-square', 'temperature-high', 'water'];\nconst categoriesIconColor = ['#DE784E','#A8A6AC', '#ffd128', '#FF5AA0', '#34c1fd'];\n\nconst CardsScreen = ({ navigation }) => {\n  const [messages, setMessages] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('TODOS');\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [menuVisible, setMenuVisible] = useState(false);\n  \n  const menuPosition = useRef(new Animated.ValueXY()).current;\n\n  const panResponder = useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderMove: (event, gesture) => {\n        menuPosition.setValue({ x: gesture.dx, y: gesture.dy });\n      },\n      \n      onPanResponderRelease: (event, gesture) => {\n        if (gesture.dx > 50) {\n          setMenuVisible(true);\n        } else {\n          setMenuVisible(false);\n        }\n        Animated.spring(menuPosition, {\n          toValue: { x: 0, y: 0 },\n          useNativeDriver: false,\n        }).start();\n      },\n    })\n  ).current;\n\n  const sensorTypeMapping = {\n    'TODOS': ['gasDetector', 'ultrasonic', 'temperature','humidity'],\n    'GAS': 'gasDetector',\n    'ULTRASONICO': 'ultrasonic',\n    'TEMPERATURA': 'temperature',\n    'HUMEDAD': 'humidity',\n  };\n\n  useEffect(() => {\n    const loadSensorAlerts = async () => {\n      setIsLoading(true);\n      setError('');\n\n      try {\n        const userToken = await AsyncStorage.getItem('userToken');\n        const userId = await AsyncStorage.getItem('userId');\n        if (!userToken || !userId) {\n          throw new Error('User token or user ID not available');\n        }\n\n        const deviceResponse = await axios.get(`http://${global.ipDireccion}:3000/api/devices/byAdmin`, {\n          headers: { Authorization: `Bearer ${userToken}` },\n        });\n\n        if (deviceResponse.data.length === 0) {\n          throw new Error('No devices found for this user');\n        }\n        const deviceId = deviceResponse.data[0]._id; // Asumiendo que el usuario tiene al menos un dispositivo\n        const mappedSensorTypes = selectedCategory === 'TODOS' ? sensorTypeMapping['TODOS'] : [sensorTypeMapping[selectedCategory]]; // Asegúrate de que esto sea un array\n\n\n        let allAlerts = [];\n        for (const sensorType of mappedSensorTypes) {\n          console.log(deviceId)\n          const alertsResponse = await axios.get(`http://${global.ipDireccion}:3000/api/devices/${deviceId}/sensors/${sensorType}/alerts`, {\n            headers: { Authorization: `Bearer ${userToken}` },\n          });\n          const sensorAlerts = alertsResponse.data.map(alert => ({\n            ...alert,\n            id: alert._id,\n            category: sensorType.toUpperCase(),\n            alertType: alert.messageType,\n            value: alert.message,\n          }));\n          //console.log(sensorAlerts)\n\n          allAlerts = [...allAlerts, ...sensorAlerts];\n        }\n\n        setMessages(allAlerts);\n      } catch (error) {\n        console.error('Error fetching sensor alerts:', error);\n        setError(error.message || 'An error occurred');\n      } finally {\n        setIsLoading(false);\n      }\n  };\n\n    loadSensorAlerts();\n  }, [selectedCategory]);\n\n  const handleCategorySelect = (category) => {\n    setSelectedCategory(category);\n  };\n\n  const filteredMessages = messages; // Si ya están correctamente filtrados, esto podría ser todo lo que necesitas\n  \n  const { theme } = useContext(ThemeContext);\n  const dark ='../../assets/images/tile_background4.png';\n  const light ='../../assets/images/tile_background9.png';\n  \n\n  return (\n    <SafeAreaView style={{...(styles.safeArea),...(styles.backgroundImage),...(styles.container),\n    //  ...{ marginTop: Platform.OS === 'ios' ? 0 : StatusBar.currentHeight }\n     }}>\n      <ImageBackground source={theme === 'light' ? require(light) : require(dark)} \n             style={{...(styles.backgroundImage),...(styles.container)}}\n      >  \n        <Header navigation={navigation} panResponder={panResponder}/>\n        {menuVisible && (<Menu navigation={navigation} style={menuPosition.getLayout()}  onClose={(isVisible) => setMenuVisible(isVisible)}/>)} \n        <CategoriesMenu categories={categories} categoriesIcon={categoriesIcon} categoriesIconColor={categoriesIconColor} selectedCategory={selectedCategory} onSelectCategory={handleCategorySelect} />\n        <FlatList data={filteredMessages}  keyExtractor={(item) => item.id} renderItem={({ item }) => <OfferCard {...item}/>}/>\n      </ImageBackground>\n    </SafeAreaView>\n    );\n  };\n\nconst Header = ({ navigation, panResponder }) => (\n  <View style={styles.headerContainer} {...panResponder.panHandlers}>\n    <View style={styles.headerContainer}>\n      <Text style={styles.headerTitle}>Estados y Avisos</Text>\n    </View>\n    <BackButton navigation={navigation}/>\n  </View>\n);\n\n  const CategoriesMenu = ({ categories, selectedCategory, categoriesIcon, categoriesIconColor, onSelectCategory }) => (\n    <ScrollView horizontal showsHorizontalScrollIndicator={false} contentContainerStyle={styles.categoriesContainer}>\n      {categories.map((category) => {\n        const iconName = categoriesIcon[categories.indexOf(category)];\n        const iconColor = categoriesIconColor[categories.indexOf(category)];\n\n        return (\n          <TouchableOpacity key={category} onPress={() => onSelectCategory(category)}\n            style={[styles.categoryButton, selectedCategory === category && \n            {...styles.categoryButtonSelected, borderBottomColor: iconColor}]}\n            >\n            <Text \n            style={[styles.categoryButtonText, selectedCategory === category && {...styles.categoryButtonTextSelected, color: iconColor}]}\n            >\n              {category}\n            </Text>\n            {/* {selectedCategory === category && ( */}\n            <View \n            style={[styles.categoryIcon, selectedCategory === category && {...styles.categoryIconSelected, shadowColor: '#ffd128' }]}\n            > \n              <FontAwesome5 name={iconName} size={30} color={iconColor} />\n            </View>\n            {/* )} */}\n        </TouchableOpacity>\n        );\n      })}\n    </ScrollView>\n  );\n    //history, sliders, bug, info-circle\n\n\n\n    /*<TouchableOpacity key={category} onPress={() => onSelectCategory(category)}>\n    <LinearGradient colors={['#8c9494', '#5d5e69', '#1b1e28']} locations={[0, 0.3, 1]}\n      style={[styles.categoryButton, selectedCategory === category && styles.categoryButtonSelected]}\n    >\n      <Text style={[styles.categoryButtonText, selectedCategory === category && styles.categoryButtonTextSelected]}>\n        {category}\n      </Text>\n      <View \n      style={[styles.categoryIcon, selectedCategory === category && {...styles.categoryIconSelected, shadowColor: iconColor}]}\n    >\n        <FontAwesome5 name={iconName} size={30} color={iconColor} />\n        </View>\n    </LinearGradient>\n  </TouchableOpacity>*/\n\n\n\n\n\n\n  const getAlertStyles = (alertType) => {\n    switch (alertType) {\n      case \"Alerta\":\n        return { borderColor: '#fb5b5a', icon: 'times-rectangle', backgroundColor: '#fb5b5a', iconColor: '#fb5b5a', buttonText: 'Resolver' };\n      case \"Advertencia\":\n        return { borderColor: '#F5BE2E', icon: 'warning', backgroundColor: '#F5BE2E', iconColor: '#F5BE2E', buttonText: 'Detalles' };\n      case \"Error\":\n        return { borderColor: '#6A969D', icon: 'bug', backgroundColor: '#6A969D', iconColor: '#6A969D', buttonText: 'Más Info' };\n      default:\n        // Un estilo por defecto para tipos de alerta no esperados\n        return { borderColor: 'grey', icon: 'question-circle', buttonText: '' };\n    }\n  };\n\n  const OfferCard = ({ id, category, alertType, value, timestamp }) => {\n    const { borderColor, icon, iconColor, backgroundColor, buttonText } = getAlertStyles(alertType);\n    const formattedTimestamp = new Date(timestamp).toLocaleString();\n  \n    const humanReadableCategory = {\n      gasdetector: 'GAS',\n      ultrasonic: 'ULTRASONICO',\n      temperature: 'TEMPERATURA',\n      humidity:'HUMEDAD',\n    }[category.toLowerCase()] || 'Desconocido';\n  \n    return (\n      <Card containerStyle={[styles.cardContainer, { borderColor }]}>\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <Icon name={icon} size={40} color={iconColor} />\n          <View style={{ marginLeft: 10 }}>\n            <Text style={styles.cardTimestamp}>{formattedTimestamp}</Text>\n            <Text style={styles.cardTitle}>{humanReadableCategory}</Text>\n            <Text style={styles.cardValue}>{value}</Text>\n            <Text style={styles.cardValue}>{alertType}</Text>\n          </View>\n        </View>\n        {buttonText && (\n          <TouchableOpacity style={[styles.cardActionButton, { backgroundColor }]}>\n            <Text style={styles.cardActionButtonText}>{buttonText}</Text>\n          </TouchableOpacity>\n        )}\n      </Card>\n    );\n  };\n  \nconst copyToClipboard = (code) => {\n    // Utilizaría el Clipboard API de React Native o algún paquete externo\n    console.log(`Código ${code} copiado al portapapeles`);\n  };\n\nexport default CardsScreen;\n\n/* /hugo/humo/max\n{\n  advertencia\n}\n */"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}