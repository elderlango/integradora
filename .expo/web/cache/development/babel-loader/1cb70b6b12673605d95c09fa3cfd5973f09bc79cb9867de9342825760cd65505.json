{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useState } from \"react\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var ThemeContext = createContext();\nexport var ThemeProvider = function ThemeProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(\"light\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    theme = _useState2[0],\n    setTheme = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var toggleTheme = function toggleTheme() {\n    if (theme === \"light\") {\n      setTheme(\"dark\");\n      StatusBar.setBarStyle(\"light-content\");\n    } else {\n      setTheme(\"light\");\n      StatusBar.setBarStyle(\"light-content\");\n    }\n  };\n  return _jsx(ThemeContext.Provider, {\n    value: {\n      theme: theme,\n      toggleTheme: toggleTheme\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["React","createContext","useState","StatusBar","jsx","_jsx","ThemeContext","ThemeProvider","_ref","children","_useState","_useState2","_slicedToArray","theme","setTheme","_useState3","_useState4","loading","setLoading","toggleTheme","setBarStyle","Provider","value"],"sources":["C:/Users/lofli/Downloads/integradora-misto/components/theme/themeManager.js"],"sourcesContent":["//themeManager.js\nimport React, { createContext, useState } from \"react\";\nimport { StatusBar } from \"react-native\";\n\nexport const ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState(\"light\");\n  const [loading, setLoading] = useState(true);\n\n  const toggleTheme = () => {\n    if (theme === \"light\") {\n      setTheme(\"dark\");\n      StatusBar.setBarStyle(\"light-content\");\n    } else {\n      setTheme(\"light\");\n      // StatusBar.setBarStyle(\"dark-content\");\n      StatusBar.setBarStyle(\"light-content\");\n    }\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,SAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAGvD,OAAO,IAAMC,YAAY,GAAGL,aAAa,CAAC,CAAC;AAE3C,OAAO,IAAMM,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACtC,IAAAC,SAAA,GAA0BR,QAAQ,CAAC,OAAO,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApCG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAA8Bb,QAAQ,CAAC,IAAI,CAAC;IAAAc,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAE1B,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxB,IAAIN,KAAK,KAAK,OAAO,EAAE;MACrBC,QAAQ,CAAC,MAAM,CAAC;MAChBX,SAAS,CAACiB,WAAW,CAAC,eAAe,CAAC;IACxC,CAAC,MAAM;MACLN,QAAQ,CAAC,OAAO,CAAC;MAEjBX,SAAS,CAACiB,WAAW,CAAC,eAAe,CAAC;IACxC;EACF,CAAC;EAED,OACEf,IAAA,CAACC,YAAY,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAET,KAAK,EAALA,KAAK;MAAEM,WAAW,EAAXA;IAAY,CAAE;IAAAV,QAAA,EAClDA;EAAQ,CACY,CAAC;AAE5B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}