{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\naxios.defaults.baseURL = `http://${global.ipDireccion}:3000/api/users`;\naxios.interceptors.request.use(function () {\n  var _ref = _asyncToGenerator(function* (config) {\n    var token = yield AsyncStorage.getItem('userToken');\n    if (!global.ipDireccion || global.ipDireccion === 'undefined') {\n      throw new Error('API base URL is undefined. Check the configuration.');\n    }\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    } else {\n      throw new Error('No token available');\n    }\n    return config;\n  });\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}(), function (error) {\n  console.error('Setup error:', error.message);\n  return Promise.reject(error.message);\n});\naxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  if (error.response) {\n    console.error('Error response:', {\n      status: error.response.status,\n      data: error.response.data\n    });\n    return Promise.reject(`Request failed with status ${error.response.status}: ${error.response.data}`);\n  } else if (error.request) {\n    console.error('Error request:', error.request);\n    return Promise.reject('Request made but no response received');\n  } else {\n    console.error('Error setting up request:', error.message);\n    return Promise.reject(error.message);\n  }\n});\nvar handleResponse = function handleResponse(response) {\n  if (response.data && response.status === 200) {\n    return response.data;\n  } else {\n    throw new Error('Unexpected response format');\n  }\n};\nexport var fetchMonitoringRequests = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    try {\n      var userId = yield AsyncStorage.getItem('userId');\n      if (!userId) throw new Error('User ID not found');\n      var response = yield axios.get(`/${userId}/monitoring-requests`);\n      return handleResponse(response);\n    } catch (error) {\n      console.error('API fetchMonitoringRequests error:', error);\n      throw new Error('Failed to fetch monitoring requests');\n    }\n  });\n  return function fetchMonitoringRequests() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var fetchDevices = function () {\n  var _ref3 = _asyncToGenerator(function* () {\n    try {\n      var userId = yield AsyncStorage.getItem('userId');\n      if (!userId) throw new Error('User ID not found');\n      var response = yield axios.get(`/devices/${userId}`);\n      return handleResponse(response);\n    } catch (error) {\n      console.error('API fetchDevices error:', error);\n      throw new Error('Failed to fetch devices');\n    }\n  });\n  return function fetchDevices() {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var fetchAdmins = function () {\n  var _ref4 = _asyncToGenerator(function* () {\n    try {\n      var userId = yield AsyncStorage.getItem('userId');\n      if (!userId) throw new Error('User ID not found');\n      var response = yield axios.get(`/admins/${userId}`);\n      return handleResponse(response);\n    } catch (error) {\n      console.error('API fetchAdmins error:', error);\n      throw new Error('Failed to fetch admins');\n    }\n  });\n  return function fetchAdmins() {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var dissociateFromDevice = function () {\n  var _ref5 = _asyncToGenerator(function* (deviceId) {\n    try {\n      var response = yield axios.delete(`/dissociateDevice/${deviceId}`);\n      return handleResponse(response);\n    } catch (error) {\n      console.error('API dissociateFromDevice error:', error);\n      throw new Error('Failed to dissociate device');\n    }\n  });\n  return function dissociateFromDevice(_x2) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var dissociateFromAdmin = function () {\n  var _ref6 = _asyncToGenerator(function* (adminId) {\n    try {\n      var response = yield axios.delete(`/dissociateAdmin/${adminId}`);\n      return handleResponse(response);\n    } catch (error) {\n      console.error('API dissociateFromAdmin error:', error);\n      throw new Error('Failed to dissociate admin');\n    }\n  });\n  return function dissociateFromAdmin(_x3) {\n    return _ref6.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["axios","AsyncStorage","defaults","baseURL","global","ipDireccion","interceptors","request","use","_ref","_asyncToGenerator","config","token","getItem","Error","headers","Authorization","_x","apply","arguments","error","console","message","Promise","reject","response","status","data","handleResponse","fetchMonitoringRequests","_ref2","userId","get","fetchDevices","_ref3","fetchAdmins","_ref4","dissociateFromDevice","_ref5","deviceId","delete","_x2","dissociateFromAdmin","_ref6","adminId","_x3"],"sources":["C:/Users/lofli/Downloads/integradora-misto/views/userDashboard/api.js"],"sourcesContent":["import axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\naxios.defaults.baseURL = `http://${global.ipDireccion}:3000/api/users`;\n\naxios.interceptors.request.use(async (config) => {\n  const token = await AsyncStorage.getItem('userToken');\n  if (!global.ipDireccion || global.ipDireccion === 'undefined') {\n    throw new Error('API base URL is undefined. Check the configuration.');\n  }\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  } else {\n    throw new Error('No token available');\n  }\n  return config;\n}, error => {\n  console.error('Setup error:', error.message);\n  return Promise.reject(error.message);\n});\n\naxios.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (error.response) {\n    console.error('Error response:', {\n      status: error.response.status,\n      data: error.response.data\n    });\n    return Promise.reject(`Request failed with status ${error.response.status}: ${error.response.data}`);\n  } else if (error.request) {\n    console.error('Error request:', error.request);\n    return Promise.reject('Request made but no response received');\n  } else {\n    console.error('Error setting up request:', error.message);\n    return Promise.reject(error.message);\n  }\n});\n\n\n\nconst handleResponse = (response) => {\n  if (response.data && response.status === 200) {\n    return response.data;\n  } else {\n    throw new Error('Unexpected response format');\n  }\n};\n\nexport const fetchMonitoringRequests = async () => {\n  try {\n    const userId = await AsyncStorage.getItem('userId');\n    if (!userId) throw new Error('User ID not found');\n    const response = await axios.get(`/${userId}/monitoring-requests`);\n    return handleResponse(response);\n  } catch (error) {\n    console.error('API fetchMonitoringRequests error:', error);\n    throw new Error('Failed to fetch monitoring requests');\n  }\n};\n\nexport const fetchDevices = async () => {\n  try {\n    const userId = await AsyncStorage.getItem('userId');\n    if (!userId) throw new Error('User ID not found');\n    const response = await axios.get(`/devices/${userId}`);\n    return handleResponse(response);\n  } catch (error) {\n    console.error('API fetchDevices error:', error);\n    throw new Error('Failed to fetch devices');\n  }\n};\n\nexport const fetchAdmins = async () => {\n  try {\n    const userId = await AsyncStorage.getItem('userId');\n    if (!userId) throw new Error('User ID not found');\n    const response = await axios.get(`/admins/${userId}`);\n    return handleResponse(response);\n  } catch (error) {\n    console.error('API fetchAdmins error:', error);\n    throw new Error('Failed to fetch admins');\n  }\n};\n\nexport const dissociateFromDevice = async (deviceId) => {\n  try {\n    const response = await axios.delete(`/dissociateDevice/${deviceId}`);\n    return handleResponse(response);\n  } catch (error) {\n    console.error('API dissociateFromDevice error:', error);\n    throw new Error('Failed to dissociate device');\n  }\n};\n\nexport const dissociateFromAdmin = async (adminId) => {\n  try {\n    const response = await axios.delete(`/dissociateAdmin/${adminId}`);\n    return handleResponse(response);\n  } catch (error) {\n    console.error('API dissociateFromAdmin error:', error);\n    throw new Error('Failed to dissociate admin');\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}