{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport RequestProcessor from \"./RequestProcessor\";\nimport styles from \"./requesScreen.styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar RequestsScreen = function RequestsScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    requests = _useState2[0],\n    setRequests = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    adminEmail = _useState4[0],\n    setAdminEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    newEmail = _useState6[0],\n    setNewEmail = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    addModalVisible = _useState10[0],\n    setAddModalVisible = _useState10[1];\n  useEffect(function () {\n    fetchRequests();\n  }, []);\n  var fetchRequests = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var userToken = yield AsyncStorage.getItem('userToken');\n      var userId = yield AsyncStorage.getItem('userId');\n      if (!userToken || !userId) {\n        Alert.alert(\"Error\", \"No se encontró el token de autenticación o el ID del usuario.\");\n        setLoading(false);\n        return;\n      }\n      var endpoint = `http://${global.ipDireccion}:3000/api/admins/${userId}/monitoring-requests`;\n      try {\n        var response = yield fetch(endpoint, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${userToken}`\n          }\n        });\n        if (response.ok) {\n          var data = yield response.json();\n          console.log(data);\n          setAdminEmail(data.email);\n          setRequests(data.sentMonitoringRequests);\n          console.log(data);\n        } else {\n          var errorMessage = yield response.text();\n          throw new Error(errorMessage || \"Error al obtener datos de las solicitudes.\");\n        }\n      } catch (error) {\n        Alert.alert(\"Error\", error.message || \"Ocurrió un error inesperado.\");\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function fetchRequests() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleAddRequest = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setAddModalVisible(false);\n      var userToken = yield AsyncStorage.getItem('userToken');\n      var userId = yield AsyncStorage.getItem('userId');\n      if (!userToken || !userId) {\n        Alert.alert(\"Error\", \"No se encontró el token de autenticación o el ID del usuario.\");\n        return;\n      }\n      var endpoint = `http://${global.ipDireccion}:3000/api/admins/sendMonitoringRequest`;\n      try {\n        setLoading(true);\n        var response = yield fetch(endpoint, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${userToken}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userEmail: newEmail\n          })\n        });\n        if (!response.ok) {\n          var errorMessage = yield response.text();\n          throw new Error(errorMessage || \"Error al enviar la solicitud.\");\n        }\n        Alert.alert(\"Éxito\", \"La solicitud se envió correctamente\");\n        fetchRequests();\n      } catch (error) {\n        Alert.alert(\"Error\", error.message || \"Ocurrió un error inesperado al enviar la solicitud.\");\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleAddRequest() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleAdd = function handleAdd() {\n    setAddModalVisible(true);\n  };\n  var handleRefresh = function handleRefresh() {\n    fetchRequests();\n  };\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.header,\n        children: [_jsx(Button, {\n          title: \"A\\xF1adir Solicitud\",\n          onPress: handleAdd\n        }), _jsx(Text, {\n          style: styles.title,\n          children: \" Lista de solicitudes\"\n        })]\n      }), _jsx(FlatList, {\n        data: requests,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return _jsx(RequestProcessor, {\n            request: item,\n            adminEmail: adminEmail,\n            onUpdate: handleRefresh,\n            onDelete: handleRefresh\n          });\n        },\n        style: styles.list\n      }), _jsx(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: addModalVisible,\n        onRequestClose: function onRequestClose() {\n          return setAddModalVisible(false);\n        },\n        children: _jsxs(View, {\n          style: styles.modalView,\n          children: [_jsx(TextInput, {\n            style: styles.input,\n            onChangeText: function onChangeText(text) {\n              return setNewEmail(text);\n            },\n            value: newEmail,\n            placeholder: \"Introduce el email\"\n          }), _jsx(Button, {\n            title: \"Enviar Solicitud\",\n            onPress: handleAddRequest\n          })]\n        })\n      })]\n    })\n  });\n};\nexport default RequestsScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Button","Modal","TextInput","Alert","FlatList","AsyncStorage","RequestProcessor","styles","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","RequestsScreen","_useState","_useState2","_slicedToArray","requests","setRequests","_useState3","_useState4","adminEmail","setAdminEmail","_useState5","_useState6","newEmail","setNewEmail","_useState7","_useState8","loading","setLoading","_useState9","_useState10","addModalVisible","setAddModalVisible","fetchRequests","_ref","_asyncToGenerator","userToken","getItem","userId","alert","endpoint","global","ipDireccion","response","fetch","method","headers","ok","data","json","console","log","email","sentMonitoringRequests","errorMessage","text","Error","error","message","apply","arguments","handleAddRequest","_ref2","body","JSON","stringify","userEmail","handleAdd","handleRefresh","children","style","container","header","title","onPress","keyExtractor","item","id","renderItem","_ref3","request","onUpdate","onDelete","list","animationType","transparent","visible","onRequestClose","modalView","input","onChangeText","value","placeholder"],"sources":["C:/Users/lofli/Downloads/integradora-misto/views/request/requesScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, Button, Modal, TextInput, Alert, FlatList } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport RequestProcessor from './RequestProcessor'; // Asegúrate de que el componente esté correctamente importado\nimport styles from './requesScreen.styles';\n  \n  const RequestsScreen = () => {\n    const [requests, setRequests] = useState([]);\n\n    const [adminEmail, setAdminEmail] = useState('');\n    const [newEmail, setNewEmail] = useState('');\n    const [loading, setLoading] = useState(true); // Asegúrate de definir este estado si lo vas a usar\n\n    const [addModalVisible, setAddModalVisible] = useState(false);\n    \n  \n    useEffect(() => {\n      // Aquí se cargarían las solicitudes desde una API\n      fetchRequests();\n    }, []);\n    \n    const fetchRequests = async () => {\n      const userToken = await AsyncStorage.getItem('userToken');\n      const userId = await AsyncStorage.getItem('userId');\n      if (!userToken || !userId) {\n        Alert.alert(\"Error\", \"No se encontró el token de autenticación o el ID del usuario.\");\n        setLoading(false);\n        return;\n      }\n\n      const endpoint = `http://${global.ipDireccion}:3000/api/admins/${userId}/monitoring-requests`;\n\n      try {\n        const response = await fetch(endpoint, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${userToken}`,\n          },\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          console.log(data)\n          // Asumiendo que tienes un estado para almacenar el email del admin\n          setAdminEmail(data.email); // Actualiza el estado con el nuevo email del admin\n\n          setRequests(data.sentMonitoringRequests); // Actualiza las solicitudes\n          console.log(data)\n        } else {\n          const errorMessage = await response.text();\n          throw new Error(errorMessage || \"Error al obtener datos de las solicitudes.\");\n        }\n      } catch (error) {\n        Alert.alert(\"Error\", error.message || \"Ocurrió un error inesperado.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n  \n  \n    \n    const handleAddRequest = async () => {\n      setAddModalVisible(false);\n      const userToken = await AsyncStorage.getItem('userToken');\n      const userId = await AsyncStorage.getItem('userId');\n      \n      if (!userToken || !userId) {\n        Alert.alert(\"Error\", \"No se encontró el token de autenticación o el ID del usuario.\");\n        return;\n      }\n  \n      const endpoint = `http://${global.ipDireccion}:3000/api/admins/sendMonitoringRequest`; // Ajusta este endpoint a tu API\n  \n      try {\n        setLoading(true);\n        const response = await fetch(endpoint, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${userToken}`,\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ userEmail: newEmail}) // Ajusta esto según el cuerpo esperado por tu API\n        });\n  \n        if (!response.ok) {\n          const errorMessage = await response.text();\n          throw new Error(errorMessage || \"Error al enviar la solicitud.\");\n        }\n  \n        Alert.alert(\"Éxito\", \"La solicitud se envió correctamente\");\n        fetchRequests(); // Actualiza la lista de solicitudes\n      } catch (error) {\n        Alert.alert(\"Error\", error.message || \"Ocurrió un error inesperado al enviar la solicitud.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const handleAdd = () => {\n      setAddModalVisible(true);\n    };\n\n    const handleRefresh = () => {\n      fetchRequests();\n    };\n  \n\n    return (\n      <>\n      <View style={styles.container}>\n        <View style={styles.header}>\n          {/* <Image source={{ uri: adminData.profilePictureUrl }} style={styles.profilePic} /> */}\n          <Button title=\"Añadir Solicitud\" onPress={handleAdd} />\n          <Text style={styles.title}> Lista de solicitudes</Text>\n        </View>\n        <FlatList\n        data={requests}\n        keyExtractor={(item) => item.id}\n        renderItem={({ item }) => (\n          <RequestProcessor\n            request={item}\n            adminEmail={adminEmail} // Pasando el email del admin a cada RequestProcessor\n            onUpdate={handleRefresh} // Aquí pasas el callback para actualizar\n            onDelete={handleRefresh} // Aquí pasas el callback para actualizar\n          />\n        )}\n        style={styles.list}\n      />\n\n\n      {/* Modal para añadir nueva solicitud */}\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={addModalVisible}\n        onRequestClose={() => setAddModalVisible(false)}>\n        <View style={styles.modalView}>\n          <TextInput\n            style={styles.input}\n            onChangeText={(text) => setNewEmail(text)}\n            value={newEmail}\n            placeholder=\"Introduce el email\"\n          />\n          <Button title=\"Enviar Solicitud\" onPress={handleAddRequest} />\n        </View>\n      </Modal>\n      </View>\n      </>\n    );\n  };\n\n\n  export default RequestsScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}