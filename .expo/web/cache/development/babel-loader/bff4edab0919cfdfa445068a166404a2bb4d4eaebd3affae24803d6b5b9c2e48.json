{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useContext, useRef } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport styles from \"../LoginScreenV/LoginScreen.styles\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Input from \"../../components/input\";\nimport Button from \"../../components/button\";\nimport UpperText from \"../../components/upperText\";\nimport ScrollViewStyle from \"../../components/scrollView\";\nimport BackButton from \"../../components/backButtonc\";\nimport ContentContainer from \"../../components/contentContainer\";\nimport IconSocial from \"../../components/iconSocial\";\nimport { ThemeContext } from \"../../components/theme/themeManager\";\nimport Menu from \"../../components/menu/menu\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useContext = useContext(ThemeContext),\n    theme = _useContext.theme;\n  var colors = theme === 'light' ? ['#8EC5FC', '#495168'] : ['#3c3f48', '#061235'];\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    passwordVisibility = _useState6[0],\n    setPasswordVisibility = _useState6[1];\n  var togglePasswordVisibility = function togglePasswordVisibility() {\n    return setPasswordVisibility(!passwordVisibility);\n  };\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isSubmitting = _useState8[0],\n    setIsSubmitting = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    activeIndex = _useState10[0],\n    setActiveIndex = _useState10[1];\n  var handleFocus = function handleFocus(index) {\n    setActiveIndex(index);\n  };\n  var isValidEmail = function isValidEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\]\\\\.,;:\\s@\"]+\\.)+[^<>()[\\]\\\\.,;:\\s@\"]{2,})$/i;\n    return re.test(String(email).toLowerCase());\n  };\n  var isValidPassword = function isValidPassword(password) {\n    return password.length >= 8;\n  };\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var endpoint = `http://${global.ipDireccion}:3000/api/login`;\n      try {\n        var _response$headers$get;\n        var response = yield fetch(endpoint, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: email,\n            password: password\n          })\n        });\n        if (response.ok && (_response$headers$get = response.headers.get('Content-Type')) != null && _response$headers$get.includes('application/json')) {\n          var json = yield response.json();\n          console.log('Login exitoso:', json);\n          yield AsyncStorage.setItem('userToken', json.token);\n          yield AsyncStorage.setItem('userRole', json.role);\n          yield AsyncStorage.setItem('userId', json.userId.toString());\n          if (json.role === 'admin') {\n            navigation.navigate('Profile');\n          } else {\n            navigation.navigate('UserDashboard');\n          }\n        } else {\n          var errorMessage = yield response.text();\n          Alert.alert('Error', errorMessage || 'Ocurrió un error al intentar iniciar sesión');\n        }\n      } catch (error) {\n        console.error(error);\n        Alert.alert('Error', 'No se pudo completar la solicitud. Por favor, verifica tu conexión y vuelve a intentarlo.');\n      }\n      if (!isValidEmail(email) || !isValidPassword(password)) {\n        Alert.alert('Error', 'Por favor, ingresa un correo electrónico y contraseña válidos.');\n        return;\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var dark = '../../assets/images/tile_background4.png';\n  var light = '../../assets/images/tile_background9.png';\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    menuVisible = _useState12[0],\n    setMenuVisible = _useState12[1];\n  var menuPosition = useRef(new Animated.ValueXY()).current;\n  var panResponder = useRef(PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderMove: function onPanResponderMove(event, gesture) {\n      menuPosition.setValue({\n        x: gesture.dx,\n        y: gesture.dy\n      });\n    },\n    onPanResponderRelease: function onPanResponderRelease(event, gesture) {\n      if (gesture.dx > 50) {\n        setMenuVisible(true);\n      } else {\n        setMenuVisible(false);\n      }\n      Animated.spring(menuPosition, {\n        toValue: {\n          x: 0,\n          y: 0\n        },\n        useNativeDriver: false\n      }).start();\n    }\n  })).current;\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: {\n      flex: 1\n    },\n    children: _jsx(ScrollView, {\n      contentContainerStyle: ScrollViewStyle.scrollView,\n      stickyHeaderIndices: [1],\n      children: _jsx(View, {\n        style: styles.container,\n        children: _jsxs(ImageBackground, {\n          source: theme === 'light' ? require(light) : require(dark),\n          style: _objectSpread(_objectSpread({}, styles.backgroundImage), styles.container),\n          children: [_jsxs(View, _objectSpread(_objectSpread({\n            style: styles.headerContainer\n          }, panResponder.panHandlers), {}, {\n            children: [_jsx(View, {\n              style: styles.headerContainer,\n              children: _jsx(Text, {\n                style: styles.headerTitle,\n                children: \"Login\"\n              })\n            }), _jsx(BackButton, {\n              navigation: navigation\n            })]\n          })), menuVisible && _jsx(Menu, {\n            navigation: navigation,\n            style: menuPosition.getLayout(),\n            onClose: function onClose(isVisible) {\n              return setMenuVisible(isVisible);\n            }\n          }), _jsxs(View, {\n            style: theme === 'light' ? ContentContainer.contentContainer : ContentContainer.contentContainerDark,\n            children: [_jsx(Text, {\n              style: theme === 'light' ? UpperText.title : UpperText.titleDark,\n              children: \"!Bienvenido de vuelta!\"\n            }), _jsx(Text, {\n              style: UpperText.subtitle,\n              children: \"Entre para acceder a su cuenta\"\n            }), _jsxs(View, {\n              children: [_jsx(Text, {\n                style: theme === 'light' ? Input.fieldAbove : Input.fieldAboveDark,\n                children: \"Email\"\n              }), _jsx(TextInput, {\n                style: _objectSpread({}, activeIndex === 1 ? Input.inputActive : Input.input),\n                onFocus: function onFocus() {\n                  return handleFocus(1);\n                },\n                value: email,\n                onChangeText: setEmail,\n                placeholder: \"Email\",\n                keyboardType: \"email-address\",\n                autoCapitalize: \"none\"\n              })]\n            }), _jsxs(View, {\n              children: [_jsx(Text, {\n                style: theme === 'light' ? Input.fieldAbove : Input.fieldAboveDark,\n                children: \"Contrase\\xF1a\"\n              }), _jsx(TextInput, {\n                style: _objectSpread({}, activeIndex === 2 ? Input.inputActive : Input.input),\n                onFocus: function onFocus() {\n                  return handleFocus(2);\n                },\n                value: password,\n                onChangeText: setPassword,\n                placeholder: \"Contrase\\xF1a\",\n                secureTextEntry: passwordVisibility\n              }), _jsx(TouchableOpacity, {\n                onPress: togglePasswordVisibility,\n                style: _objectSpread(_objectSpread({}, Input.iconInput), {}, {\n                  top: 40\n                }),\n                children: _jsx(Icon, {\n                  name: passwordVisibility ? \"visibility-off\" : \"visibility\",\n                  size: 30,\n                  color: \"#6e6e6e\"\n                })\n              })]\n            }), _jsx(TouchableOpacity, {\n              style: Button.buttonPrimary,\n              onPress: handleLogin,\n              disabled: isSubmitting,\n              children: _jsx(Text, {\n                style: Button.buttonText,\n                children: \"Entrar\"\n              })\n            }), isSubmitting && _jsxs(View, {\n              style: styles.loadingContainer,\n              children: [_jsx(ActivityIndicator, {\n                size: \"large\",\n                color: \"#fff\"\n              }), _jsx(Text, {\n                children: \"Cargando...\"\n              })]\n            }), _jsx(Text, {\n              style: styles.signupButton,\n              children: \"\\xBFOlvidaste tu contrase\\xF1a?\"\n            })]\n          }), _jsxs(View, {\n            style: styles.containerline,\n            children: [_jsx(View, {\n              style: styles.line\n            }), _jsx(Text, {\n              style: styles.text,\n              children: \"O continuar con\"\n            }), _jsx(View, {\n              style: styles.line\n            })]\n          }), _jsx(IconSocial, {}), _jsxs(View, {\n            style: styles.signupContainer,\n            children: [_jsx(Text, {\n              style: styles.signupText,\n              children: \"\\xBFNo tienes una cuenta? \"\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return navigation.navigate('Register');\n              },\n              children: _jsx(Text, {\n                style: styles.signupButton,\n                children: \"Reg\\xEDstrate\"\n              })\n            })]\n          })]\n        })\n      })\n    })\n  });\n};\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","useContext","useRef","Text","View","TextInput","TouchableOpacity","Alert","ScrollView","KeyboardAvoidingView","Platform","ImageBackground","PanResponder","Animated","LinearGradient","styles","Icon","AsyncStorage","Input","Button","UpperText","ScrollViewStyle","BackButton","ContentContainer","IconSocial","ThemeContext","Menu","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useContext","theme","colors","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","passwordVisibility","setPasswordVisibility","togglePasswordVisibility","_useState7","_useState8","isSubmitting","setIsSubmitting","_useState9","_useState10","activeIndex","setActiveIndex","handleFocus","index","isValidEmail","re","test","String","toLowerCase","isValidPassword","length","handleLogin","_ref2","_asyncToGenerator","endpoint","global","ipDireccion","_response$headers$get","response","fetch","method","headers","body","JSON","stringify","ok","get","includes","json","console","log","setItem","token","role","userId","toString","navigate","errorMessage","text","alert","error","apply","arguments","dark","light","_useState11","_useState12","menuVisible","setMenuVisible","menuPosition","ValueXY","current","panResponder","create","onStartShouldSetPanResponder","onPanResponderMove","event","gesture","setValue","x","dx","y","dy","onPanResponderRelease","spring","toValue","useNativeDriver","start","behavior","OS","style","flex","children","contentContainerStyle","scrollView","stickyHeaderIndices","container","source","require","_objectSpread","backgroundImage","headerContainer","panHandlers","headerTitle","getLayout","onClose","isVisible","contentContainer","contentContainerDark","title","titleDark","subtitle","fieldAbove","fieldAboveDark","inputActive","input","onFocus","value","onChangeText","placeholder","keyboardType","autoCapitalize","secureTextEntry","onPress","iconInput","top","name","size","color","buttonPrimary","disabled","buttonText","loadingContainer","ActivityIndicator","signupButton","containerline","line","signupContainer","signupText"],"sources":["C:/Users/lofli/Downloads/integradora-misto/views/LoginScreenV/LoginScreen.js"],"sourcesContent":["// views/LoginScreen.js\nimport React, { useState,useContext,useRef } from 'react';\nimport { Text, View, TextInput, TouchableOpacity, Alert, ScrollView, KeyboardAvoidingView, Platform,ImageBackground,PanResponder,Animated } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport styles from '../LoginScreenV/LoginScreen.styles';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Input from '../../components/input';\nimport Button from '../../components/button';\nimport UpperText from '../../components/upperText';\nimport ScrollViewStyle from '../../components/scrollView';\nimport BackButton from '../../components/backButtonc';\nimport ContentContainer from '../../components/contentContainer';\nimport IconSocial from '../../components/iconSocial';\nimport { ThemeContext } from \"../../components/theme/themeManager\";\nimport Menu from '../../components/menu/menu';\n\nconst LoginScreen = ({ navigation }) => {\n    const { theme } = useContext(ThemeContext);\n    const colors = theme === 'light' ? ['#8EC5FC', '#495168'] : ['#3c3f48', '#061235'];\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordVisibility, setPasswordVisibility] = useState(true);\n    const togglePasswordVisibility = () => setPasswordVisibility(!passwordVisibility);\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n      //para el active css de los inputs\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  const handleFocus = (index) => {\n    setActiveIndex(index);\n  };\n\n    const isValidEmail = (email) => {\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\]\\\\.,;:\\s@\"]+\\.)+[^<>()[\\]\\\\.,;:\\s@\"]{2,})$/i;\n        return re.test(String(email).toLowerCase());\n      };\n      \n      const isValidPassword = (password) => {\n        // Ejemplo: Validar que la contraseña tenga al menos 8 caracteres\n        return password.length >= 8;\n      };\n\n    const handleLogin = async () => {\n        const endpoint = `http://${global.ipDireccion}:3000/api/login`; // Endpoint unificado para login\n        \n        try {\n            const response = await fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    email: email,\n                    password: password,\n                }),\n            });\n  \n            if (response.ok && response.headers.get('Content-Type')?.includes('application/json')) {\n                const json = await response.json();\n                console.log('Login exitoso:', json);\n                await AsyncStorage.setItem('userToken', json.token);\n                await AsyncStorage.setItem('userRole', json.role);\n                await AsyncStorage.setItem('userId', json.userId.toString()); // Asegúrate de que es una cadena\n                \n                // Navega a la pantalla correspondiente basada en el rol\n                if (json.role === 'admin') {\n                    navigation.navigate('Profile'); // Asume que tienes una pantalla de dashboard para admin\n                } else {\n                    navigation.navigate('UserDashboard'); // Asume que tienes una pantalla para usuarios\n                }\n            } else {\n                const errorMessage = await response.text();\n                Alert.alert('Error', errorMessage || 'Ocurrió un error al intentar iniciar sesión');\n            }\n        } catch (error) {\n            console.error(error);\n            Alert.alert('Error', 'No se pudo completar la solicitud. Por favor, verifica tu conexión y vuelve a intentarlo.');\n        }\n\n        if (!isValidEmail(email) || !isValidPassword(password)) {\n            Alert.alert('Error', 'Por favor, ingresa un correo electrónico y contraseña válidos.');\n            return;\n          }\n    };\n\n    const dark ='../../assets/images/tile_background4.png';\n    const light ='../../assets/images/tile_background9.png';\n\n    const [menuVisible, setMenuVisible] = useState(false);\n  \n  const menuPosition = useRef(new Animated.ValueXY()).current;\n\n  const panResponder = useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderMove: (event, gesture) => {\n        menuPosition.setValue({ x: gesture.dx, y: gesture.dy });\n      },\n      \n      onPanResponderRelease: (event, gesture) => {\n        if (gesture.dx > 50) {\n          setMenuVisible(true);\n        } else {\n          setMenuVisible(false);\n        }\n        Animated.spring(menuPosition, {\n          toValue: { x: 0, y: 0 },\n          useNativeDriver: false,\n        }).start();\n      },\n    })\n  ).current;\n\n    return (\n        <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"} style={{flex: 1}}>\n                  <ScrollView contentContainerStyle={ScrollViewStyle.scrollView}  stickyHeaderIndices={[1]}  >\n                  <View style={styles.container}>\n        <ImageBackground source={theme === 'light' ? require(light) : require(dark)} \n             style={{ ...(styles.backgroundImage),...(styles.container),}}>          \n          <View style={styles.headerContainer} {...panResponder.panHandlers}>\n            <View style={styles.headerContainer}>\n              <Text style={styles.headerTitle}>Login</Text>\n            </View>\n            <BackButton navigation={navigation}/>\n          </View>\n            {menuVisible && (<Menu navigation={navigation} style={menuPosition.getLayout()}  onClose={(isVisible) => setMenuVisible(isVisible)}/>)} \n\n            <View style={theme === 'light' ? ContentContainer.contentContainer : ContentContainer.contentContainerDark}>\n              <Text style={theme === 'light' ? UpperText.title : UpperText.titleDark}>!Bienvenido de vuelta!</Text>\n              <Text style={UpperText.subtitle}>Entre para acceder a su cuenta</Text>\n\n              <View>\n                  <Text  style={theme === 'light' ? Input.fieldAbove : Input.fieldAboveDark}>Email</Text>\n                  <TextInput\n                    style={{\n                      ...(activeIndex === 1 ? Input.inputActive : Input.input),\n                    }}\n                    onFocus={() => handleFocus(1)}\n                    //value=\"nuevoemail@admin.com\"\n                    value={email}\n                    onChangeText={setEmail}\n                    placeholder=\"Email\"\n                    keyboardType=\"email-address\"\n                    autoCapitalize=\"none\"\n                  />\n              </View>\n\n                    <View>\n                <Text  style={theme === 'light' ? Input.fieldAbove : Input.fieldAboveDark}>Contraseña</Text>\n                <TextInput\n                  style={{\n                    ...(activeIndex === 2 ? Input.inputActive : Input.input),\n                  }}\n                  onFocus={() => handleFocus(2)}\n                  value={password}\n                //  value=\"NuevaContraseña1234\"\n                  onChangeText={setPassword}\n                  placeholder=\"Contraseña\"\n                  secureTextEntry={passwordVisibility}\n                  />\n                  <TouchableOpacity\n                    onPress={togglePasswordVisibility}\n                    style={{\n                      ...(Input.iconInput),\n                      top:40\n                    }}\n                  >\n                      <Icon name={passwordVisibility ? \"visibility-off\" : \"visibility\"} size={30} color=\"#6e6e6e\" />\n                  </TouchableOpacity>\n                    </View>\n\n                    <TouchableOpacity style={Button.buttonPrimary} onPress={handleLogin} disabled={isSubmitting}>\n                        <Text style={Button.buttonText}>Entrar</Text>\n                    </TouchableOpacity>\n                    {isSubmitting && (\n                    <View style={styles.loadingContainer}>\n                        <ActivityIndicator size=\"large\" color=\"#fff\" />\n                        <Text>Cargando...</Text>\n                    </View>\n                    )}\n                    \n                    <Text style={styles.signupButton}>¿Olvidaste tu contraseña?</Text>\n                </View>\n\n                <View style={styles.containerline}>\n                    <View style={styles.line} />\n                    <Text style={styles.text}>O continuar con</Text>\n                    <View style={styles.line} />\n                </View>\n\n                        <IconSocial />\n                    \n\n                <View style={styles.signupContainer}>\n                    <Text style={styles.signupText}>¿No tienes una cuenta? </Text>\n                    <TouchableOpacity onPress={() => navigation.navigate('Register')}>\n                        <Text style={styles.signupButton}>Regístrate</Text>\n                    </TouchableOpacity>\n                </View>\n                </ImageBackground>\n      </View>\n            </ScrollView>\n        </KeyboardAvoidingView>\n    );\n};\n\nexport default LoginScreen;\n\n/* \n{\n   \"email\": \"nuevoemail@admin.com\",\n   \"password\": \"NuevaContraseña1234\"\n}\n\n*/\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}