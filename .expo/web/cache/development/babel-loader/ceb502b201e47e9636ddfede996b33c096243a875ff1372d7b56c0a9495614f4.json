{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport * as DeviceService from \"../api\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar useDeviceManagement = function useDeviceManagement() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    devices = _useState2[0],\n    setDevices = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    admins = _useState4[0],\n    setAdmins = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    monitoringRequests = _useState6[0],\n    setMonitoringRequests = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isLoading = _useState8[0],\n    setIsLoading = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    error = _useState10[0],\n    setError = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    selectedDevice = _useState12[0],\n    setSelectedDevice = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    selectedAdmin = _useState14[0],\n    setSelectedAdmin = _useState14[1];\n  useEffect(function () {}, []);\n  var loadData = useCallback(_asyncToGenerator(function* () {\n    setIsLoading(true);\n    setError(null);\n    try {\n      var responses = yield Promise.all([DeviceService.fetchDevices(), DeviceService.fetchAdmins(), DeviceService.fetchMonitoringRequests()]).catch(function (error) {\n        throw new Error(`Network or CORS error: ${error.message}`);\n      });\n      var errorMessages = responses.map(function (response, index) {\n        if (!response.ok) {\n          return `Request ${index + 1} failed with status ${response.status}: ${response.statusText}`;\n        }\n        return null;\n      }).filter(Boolean);\n      if (errorMessages.length > 0) {\n        throw new Error(errorMessages.join('; '));\n      }\n      setDevices(responses[0].data);\n      setAdmins(responses[1].data);\n      setMonitoringRequests(responses[2].data);\n    } catch (error) {\n      console.error('Error loading data:', error);\n      setError(`Failed to load device management data: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  }), []);\n  var dissociateDevice = function () {\n    var _ref2 = _asyncToGenerator(function* (deviceId) {\n      try {\n        var response = yield DeviceService.dissociateFromDevice(deviceId);\n        if (response.status === 200) {\n          setDevices(function (prev) {\n            return prev.filter(function (device) {\n              return device.id !== deviceId;\n            });\n          });\n        } else if (response.status === 404) {\n          throw new Error('Device not found');\n        } else {\n          throw new Error('Failed to dissociate device');\n        }\n      } catch (error) {\n        console.error('Error in dissociateDevice:', error);\n        setError(`Failed to dissociate device: ${error.message}`);\n      }\n    });\n    return function dissociateDevice(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var dissociateAdmin = function () {\n    var _ref3 = _asyncToGenerator(function* (adminId) {\n      try {\n        var response = yield DeviceService.dissociateFromAdmin(adminId);\n        if (response.status === 200) {\n          setAdmins(function (prev) {\n            return prev.filter(function (admin) {\n              return admin.id !== adminId;\n            });\n          });\n        } else if (response.status === 404) {\n          throw new Error('Admin not found');\n        } else {\n          throw new Error('Failed to dissociate admin');\n        }\n      } catch (error) {\n        console.error('Error in dissociateAdmin:', error);\n        setError(`Failed to dissociate admin: ${error.message}`);\n      }\n    });\n    return function dissociateAdmin(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return {\n    devices: devices,\n    admins: admins,\n    monitoringRequests: monitoringRequests,\n    isLoading: isLoading,\n    error: error,\n    loadData: loadData,\n    setSelectedDevice: setSelectedDevice,\n    selectedDevice: selectedDevice,\n    setSelectedAdmin: setSelectedAdmin,\n    dissociateDevice: dissociateDevice,\n    dissociateAdmin: dissociateAdmin\n  };\n};\nexport default useDeviceManagement;","map":{"version":3,"names":["React","useState","useEffect","useCallback","DeviceService","AsyncStorage","useDeviceManagement","_useState","_useState2","_slicedToArray","devices","setDevices","_useState3","_useState4","admins","setAdmins","_useState5","_useState6","monitoringRequests","setMonitoringRequests","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","error","setError","_useState11","_useState12","selectedDevice","setSelectedDevice","_useState13","_useState14","selectedAdmin","setSelectedAdmin","loadData","_asyncToGenerator","responses","Promise","all","fetchDevices","fetchAdmins","fetchMonitoringRequests","catch","Error","message","errorMessages","map","response","index","ok","status","statusText","filter","Boolean","length","join","data","console","dissociateDevice","_ref2","deviceId","dissociateFromDevice","prev","device","id","_x","apply","arguments","dissociateAdmin","_ref3","adminId","dissociateFromAdmin","admin","_x2"],"sources":["C:/Users/lofli/Downloads/integradora-misto/views/userDashboard/hooks/useDeviceManagement.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport * as DeviceService from '../api';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst useDeviceManagement = () => {\n    const [devices, setDevices] = useState([]);\n    const [admins, setAdmins] = useState([]);\n    const [monitoringRequests, setMonitoringRequests] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [selectedDevice, setSelectedDevice] = useState(null);\n    const [selectedAdmin, setSelectedAdmin] = useState(null);\n\n    useEffect(() => {\n      /* loadData(); */\n    }, []);\n\n    const loadData = useCallback(async () => {\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const responses = await Promise.all([\n          DeviceService.fetchDevices(),\n          DeviceService.fetchAdmins(),\n          DeviceService.fetchMonitoringRequests()\n        ]).catch(error => {\n          throw new Error(`Network or CORS error: ${error.message}`);\n        });\n\n        const errorMessages = responses.map((response, index) => {\n          if (!response.ok) {\n            return `Request ${index + 1} failed with status ${response.status}: ${response.statusText}`;\n          }\n          return null;\n        }).filter(Boolean);\n\n        if (errorMessages.length > 0) {\n          throw new Error(errorMessages.join('; '));\n        }\n\n        setDevices(responses[0].data);\n        setAdmins(responses[1].data);\n        setMonitoringRequests(responses[2].data);\n      } catch (error) {\n        console.error('Error loading data:', error);\n        setError(`Failed to load device management data: ${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    }, []);\n\n    const dissociateDevice = async (deviceId) => {\n      try {\n        const response = await DeviceService.dissociateFromDevice(deviceId);\n        if (response.status === 200) {\n          setDevices(prev => prev.filter(device => device.id !== deviceId));\n        } else if (response.status === 404) {\n          throw new Error('Device not found');\n        } else {\n          throw new Error('Failed to dissociate device');\n        }\n      } catch (error) {\n        console.error('Error in dissociateDevice:', error);\n        setError(`Failed to dissociate device: ${error.message}`);\n      }\n    };\n\n    const dissociateAdmin = async (adminId) => {\n      try {\n        const response = await DeviceService.dissociateFromAdmin(adminId);\n        if (response.status === 200) {\n          setAdmins(prev => prev.filter(admin => admin.id !== adminId));\n        } else if (response.status === 404) {\n          throw new Error('Admin not found');\n        } else {\n          throw new Error('Failed to dissociate admin');\n        }\n      } catch (error) {\n        console.error('Error in dissociateAdmin:', error);\n        setError(`Failed to dissociate admin: ${error.message}`);\n      }\n    };\n\n    return {\n      devices,\n      admins,\n      monitoringRequests,\n      isLoading,\n      error,\n      loadData,\n      setSelectedDevice,\n      selectedDevice,\n      setSelectedAdmin,\n      dissociateDevice,\n      dissociateAdmin,\n    };\n};\n\nexport default useDeviceManagement;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}