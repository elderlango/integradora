{"ast":null,"code":"import React, { useState, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Checkbox } from 'react-native-paper';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport styles from \"./adminDashboardScreen.styles\";\nimport useDeviceManagement from \"./hooks/useDeviceManagement\";\nimport DeviceList from \"./components/DeviceList\";\nimport UserList from \"./components/UserList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AdminDashboardScreen = function AdminDashboardScreen() {\n  var _useDeviceManagement = useDeviceManagement(),\n    openModal = _useDeviceManagement.openModal,\n    closeModal = _useDeviceManagement.closeModal,\n    openRequestModal = _useDeviceManagement.openRequestModal,\n    closeRequestModal = _useDeviceManagement.closeRequestModal,\n    devices = _useDeviceManagement.devices,\n    users = _useDeviceManagement.users,\n    monitoringRequests = _useDeviceManagement.monitoringRequests,\n    isLoading = _useDeviceManagement.isLoading,\n    loadData = _useDeviceManagement.loadData,\n    setSelectedDevice = _useDeviceManagement.setSelectedDevice,\n    selectedDevice = _useDeviceManagement.selectedDevice,\n    addDevice = _useDeviceManagement.addDevice,\n    assignDeviceToUser = _useDeviceManagement.assignDeviceToUser,\n    unassignDeviceFromUser = _useDeviceManagement.unassignDeviceFromUser,\n    removeUser = _useDeviceManagement.removeUser,\n    deleteDevice = _useDeviceManagement.deleteDevice,\n    assignUsersToSelectedDevice = _useDeviceManagement.assignUsersToSelectedDevice,\n    unaAssignUsersToSelectedDevice = _useDeviceManagement.unaAssignUsersToSelectedDevice;\n  useEffect(function () {\n    loadData();\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: !isLoading && _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Gesti\\xF3n de Dispositivos y Usuarios\"\n      }), _jsx(UserList, {\n        users: users\n      }), _jsx(DeviceList, {\n        devices: devices\n      })]\n    })\n  });\n};\nexport default AdminDashboardScreen;","map":{"version":3,"names":["React","useState","useEffect","useCallback","View","Text","Button","FlatList","Alert","ActivityIndicator","TouchableOpacity","Modal","TextInput","ScrollView","Checkbox","MaterialIcons","styles","useDeviceManagement","DeviceList","UserList","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","AdminDashboardScreen","_useDeviceManagement","openModal","closeModal","openRequestModal","closeRequestModal","devices","users","monitoringRequests","isLoading","loadData","setSelectedDevice","selectedDevice","addDevice","assignDeviceToUser","unassignDeviceFromUser","removeUser","deleteDevice","assignUsersToSelectedDevice","unaAssignUsersToSelectedDevice","style","container","children","title"],"sources":["C:/Users/lofli/Downloads/integradora-misto/views/adminDashboard/adminDashboardScreen.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { View, Text, Button, FlatList, Alert, ActivityIndicator, TouchableOpacity, Modal, TextInput, ScrollView } from 'react-native';\nimport { Checkbox } from 'react-native-paper';\nimport {MaterialIcons } from '@expo/vector-icons';\nimport styles from './adminDashboardScreen.styles';\nimport useDeviceManagement from './hooks/useDeviceManagement';\nimport DeviceList from './components/DeviceList';\nimport UserList from './components/UserList';\n\nconst AdminDashboardScreen = () => {\n  const {\n    openModal,\n    closeModal,\n    openRequestModal,\n    closeRequestModal,\n    devices,\n    users,\n    monitoringRequests,\n    isLoading,\n    loadData,\n    setSelectedDevice,\n    selectedDevice,\n    addDevice,\n    assignDeviceToUser,\n    unassignDeviceFromUser,\n    removeUser,\n    deleteDevice,\n    assignUsersToSelectedDevice,\n    unaAssignUsersToSelectedDevice,\n    // ... (Todas las funciones importadas del hook)\n  } = useDeviceManagement();\n\n    useEffect(() => {\n        loadData();\n      }, []);\n  \n\nreturn (\n  <View style={styles.container}>\n    {!isLoading && (\n      <>\n        <Text style={styles.title}>Gesti√≥n de Dispositivos y Usuarios</Text>\n        \n        <UserList\n          users={users}\n          \n        />\n        \n        <DeviceList\n          devices={devices}\n        />\n        \n      </>\n    )}\n  </View>\n);\n\n\n  \n};\n\n\nexport default AdminDashboardScreen;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAEhE,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAAQC,aAAa,QAAQ,oBAAoB;AACjD,OAAOC,MAAM;AACb,OAAOC,mBAAmB;AAC1B,OAAOC,UAAU;AACjB,OAAOC,QAAQ;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE7C,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;EACjC,IAAAC,oBAAA,GAoBIV,mBAAmB,CAAC,CAAC;IAnBvBW,SAAS,GAAAD,oBAAA,CAATC,SAAS;IACTC,UAAU,GAAAF,oBAAA,CAAVE,UAAU;IACVC,gBAAgB,GAAAH,oBAAA,CAAhBG,gBAAgB;IAChBC,iBAAiB,GAAAJ,oBAAA,CAAjBI,iBAAiB;IACjBC,OAAO,GAAAL,oBAAA,CAAPK,OAAO;IACPC,KAAK,GAAAN,oBAAA,CAALM,KAAK;IACLC,kBAAkB,GAAAP,oBAAA,CAAlBO,kBAAkB;IAClBC,SAAS,GAAAR,oBAAA,CAATQ,SAAS;IACTC,QAAQ,GAAAT,oBAAA,CAARS,QAAQ;IACRC,iBAAiB,GAAAV,oBAAA,CAAjBU,iBAAiB;IACjBC,cAAc,GAAAX,oBAAA,CAAdW,cAAc;IACdC,SAAS,GAAAZ,oBAAA,CAATY,SAAS;IACTC,kBAAkB,GAAAb,oBAAA,CAAlBa,kBAAkB;IAClBC,sBAAsB,GAAAd,oBAAA,CAAtBc,sBAAsB;IACtBC,UAAU,GAAAf,oBAAA,CAAVe,UAAU;IACVC,YAAY,GAAAhB,oBAAA,CAAZgB,YAAY;IACZC,2BAA2B,GAAAjB,oBAAA,CAA3BiB,2BAA2B;IAC3BC,8BAA8B,GAAAlB,oBAAA,CAA9BkB,8BAA8B;EAI9B3C,SAAS,CAAC,YAAM;IACZkC,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAGZ,OACEf,IAAA,CAACjB,IAAI;IAAC0C,KAAK,EAAE9B,MAAM,CAAC+B,SAAU;IAAAC,QAAA,EAC3B,CAACb,SAAS,IACTV,KAAA,CAAAF,SAAA;MAAAyB,QAAA,GACE3B,IAAA,CAAChB,IAAI;QAACyC,KAAK,EAAE9B,MAAM,CAACiC,KAAM;QAAAD,QAAA,EAAC;MAAkC,CAAM,CAAC,EAEpE3B,IAAA,CAACF,QAAQ;QACPc,KAAK,EAAEA;MAAM,CAEd,CAAC,EAEFZ,IAAA,CAACH,UAAU;QACTc,OAAO,EAAEA;MAAQ,CAClB,CAAC;IAAA,CAEF;EACH,CACG,CAAC;AAKT,CAAC;AAGD,eAAeN,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}