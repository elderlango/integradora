{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Checkbox } from 'react-native-paper';\nimport useDeviceManagement from \"../hooks/useDeviceManagement\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"#F7F6FA\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  userListItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: 250,\n    marginVertical: 10,\n    padding: 10,\n    backgroundColor: \"#f2f2f2\",\n    borderRadius: 10\n  },\n  deviceText: {\n    fontSize: 16,\n    flexShrink: 1\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\",\n    padding: 10,\n    marginTop: 20,\n    borderRadius: 20,\n    width: 100\n  },\n  textStyle: {\n    color: \"#F7F6FA\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\",\n    fontSize: 18\n  },\n  scrollViewContainer: {\n    maxHeight: 400\n  }\n});\nexport default function UserActionModal(_ref) {\n  var isVisible = _ref.isVisible,\n    onClose = _ref.onClose,\n    user = _ref.user;\n  var _useDeviceManagement = useDeviceManagement(),\n    devices = _useDeviceManagement.devices,\n    assignDeviceToUser = _useDeviceManagement.assignDeviceToUser,\n    unassignDeviceFromUser = _useDeviceManagement.unassignDeviceFromUser,\n    loadData = _useDeviceManagement.loadData;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    assignedDevices = _useState2[0],\n    setAssignedDevices = _useState2[1];\n  useEffect(function () {\n    setAssignedDevices(user.assignedDevices || []);\n  }, [user]);\n  var handleToggleDeviceAssignment = function () {\n    var _ref2 = _asyncToGenerator(function* (deviceId) {\n      if (assignedDevices.includes(deviceId)) {\n        yield unassignDeviceFromUser(deviceId, user._id);\n      } else {\n        yield assignDeviceToUser(deviceId, user._id);\n      }\n      loadData();\n      onClose();\n    });\n    return function handleToggleDeviceAssignment(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(Modal, {\n    visible: isVisible,\n    animationType: \"slide\",\n    transparent: true,\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.centeredView,\n      children: _jsxs(View, {\n        style: styles.modalView,\n        children: [_jsx(ScrollView, {\n          children: devices.map(function (device) {\n            return _jsxs(View, {\n              style: styles.userListItem,\n              children: [_jsx(Text, {\n                children: device.room\n              }), _jsx(Checkbox, {\n                status: assignedDevices.includes(device._id) ? 'checked' : 'unchecked',\n                onPress: function onPress() {\n                  return handleToggleDeviceAssignment(device._id);\n                }\n              })]\n            }, device._id);\n          })\n        }), _jsx(Button, {\n          title: \"Cerrar\",\n          onPress: onClose\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","Modal","View","Text","Button","StyleSheet","ScrollView","Checkbox","useDeviceManagement","jsx","_jsx","jsxs","_jsxs","styles","create","centeredView","flex","justifyContent","alignItems","marginTop","modalView","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","userListItem","flexDirection","marginVertical","deviceText","fontSize","flexShrink","buttonClose","textStyle","color","fontWeight","textAlign","modalText","marginBottom","scrollViewContainer","maxHeight","UserActionModal","_ref","isVisible","onClose","user","_useDeviceManagement","devices","assignDeviceToUser","unassignDeviceFromUser","loadData","_useState","_useState2","_slicedToArray","assignedDevices","setAssignedDevices","handleToggleDeviceAssignment","_ref2","_asyncToGenerator","deviceId","includes","_id","_x","apply","arguments","visible","animationType","transparent","onRequestClose","children","style","map","device","room","status","onPress","title"],"sources":["C:/Users/lofli/Downloads/integradora-misto/views/adminDashboard/components/UserActionModal.js"],"sourcesContent":["// UserActionModal.js\nimport React, { useState, useEffect } from 'react';\nimport { Modal, View, Text, Button, StyleSheet, ScrollView } from 'react-native';\nimport { Checkbox } from 'react-native-paper';\nimport useDeviceManagement from '../hooks/useDeviceManagement';\n\nconst styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22,\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"#F7F6FA\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  userListItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: 250, // Ajusta este valor según el tamaño de tu pantalla\n    marginVertical: 10,\n    padding: 10,\n    backgroundColor: \"#f2f2f2\",\n    borderRadius: 10,\n  },\n  deviceText: {\n    fontSize: 16,\n    flexShrink: 1, // Asegura que el texto se ajuste dentro del contenedor\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\",\n    padding: 10,\n    marginTop: 20,\n    borderRadius: 20,\n    width: 100, // Ajusta el ancho del botón cerrar según prefieras\n  },\n  textStyle: {\n    color: \"#F7F6FA\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\",\n    fontSize: 18,\n  },\n  scrollViewContainer: {\n    maxHeight: 400, // Ajusta la altura máxima del ScrollView según prefieras\n  },\n});\n\n\n\nexport default function UserActionModal({ isVisible, onClose, user }) {\n  const { devices, assignDeviceToUser, unassignDeviceFromUser, loadData } = useDeviceManagement();\n  const [assignedDevices, setAssignedDevices] = useState([]);\n\n  useEffect(() => {\n    // Suponiendo que `user` tiene una propiedad `assignedDevices` que es una lista de IDs\n    setAssignedDevices(user.assignedDevices || []);\n  }, [user]);\n\n  const handleToggleDeviceAssignment = async (deviceId) => {\n    if (assignedDevices.includes(deviceId)) {\n      await unassignDeviceFromUser(deviceId, user._id);\n    } else {\n      await assignDeviceToUser(deviceId, user._id);\n    }\n    loadData();\n    onClose();\n  };\n\n  return (\n    <Modal\n      visible={isVisible}\n      animationType=\"slide\"\n      transparent\n      onRequestClose={onClose}\n    >\n      <View style={styles.centeredView}>\n        <View style={styles.modalView}>\n          <ScrollView>\n            {devices.map((device) => (\n              <View key={device._id} style={styles.userListItem}>\n                <Text>{device.room}</Text>\n                <Checkbox\n                  status={assignedDevices.includes(device._id) ? 'checked' : 'unchecked'}\n                  onPress={() => handleToggleDeviceAssignment(device._id)}\n                />\n              </View>\n            ))}\n          </ScrollView>\n          <Button title=\"Cerrar\" onPress={onClose} />\n        </View>\n      </View>\n    </Modal>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}