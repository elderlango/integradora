{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport * as DeviceService from \"../api\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\nvar useDeviceManagement = function useDeviceManagement() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    devices = _useState2[0],\n    setDevices = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    users = _useState4[0],\n    setUsers = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    monitoringRequests = _useState6[0],\n    setMonitoringRequests = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isLoading = _useState8[0],\n    setIsLoading = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    selectedDevice = _useState10[0],\n    setSelectedDevice = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    selectedUsers = _useState12[0],\n    setSelectedUsers = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    userEmail = _useState14[0],\n    setUserEmail = _useState14[1];\n  useEffect(function () {\n    loadData();\n  }, []);\n  var loadData = useCallback(_asyncToGenerator(function* () {\n    setIsLoading(true);\n    try {\n      var deviceResponse = yield DeviceService.fetchDevices();\n      var userResponse = yield DeviceService.fetchUsers();\n      var monitoringRequestResponse = yield DeviceService.fetchMonitoringRequests();\n      if (deviceResponse.status === 200) {\n        setDevices(deviceResponse.data);\n      } else {\n        console.error('Error fetching devices:', deviceResponse.status);\n      }\n      if (userResponse.status === 200) {\n        setUsers(userResponse.data);\n      } else {\n        console.error('Error fetching users:', userResponse.status);\n      }\n      if (monitoringRequestResponse.status === 200) {\n        setMonitoringRequests(monitoringRequestResponse.data);\n      } else {\n        console.error('Error fetching monitoring requests:', monitoringRequestResponse.status);\n      }\n    } catch (error) {\n      console.error('Error loading data:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }), []);\n  var addDevice = function () {\n    var _ref2 = _asyncToGenerator(function* (deviceDetails) {\n      try {\n        var response = yield DeviceService.addDevice(deviceDetails);\n        if (response.status === 201) {\n          setDevices([].concat(_toConsumableArray(devices), [response.data]));\n        } else {\n          console.error('Error adding device:', response.status);\n        }\n      } catch (error) {\n        console.error('Error adding device:', error);\n      }\n    });\n    return function addDevice(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var updateDevice = function () {\n    var _ref3 = _asyncToGenerator(function* (deviceId, deviceDetails) {\n      try {\n        var response = yield DeviceService.updateDevice(deviceId, deviceDetails);\n        if (response.status === 200) {\n          setDevices(devices.map(function (device) {\n            return device._id === deviceId ? response.data : device;\n          }));\n        } else {\n          console.error('Error updating device:', response.status);\n        }\n      } catch (error) {\n        console.error('Error updating device:', error);\n      }\n    });\n    return function updateDevice(_x2, _x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var assignDeviceToUser = function () {\n    var _ref4 = _asyncToGenerator(function* (deviceId, userId) {\n      var userToken = yield AsyncStorage.getItem('userToken');\n      try {\n        var response = yield axios.post(`http://${global.ipDireccion}:3000/api/admins/assignDevicesToUsers`, {\n          userIds: [userId]\n        }, {\n          headers: {\n            'Authorization': `Bearer ${userToken}`\n          }\n        });\n        if (response.status === 200) {\n          var updatedDevice = response.data;\n          setDevices(function (prevDevices) {\n            return prevDevices.map(function (device) {\n              return device._id === deviceId ? updatedDevice : device;\n            });\n          });\n          Alert.alert(\"Dispositivo asignado exitosamente\");\n        } else {\n          Alert.alert(\"Error\", \"No se pudo asignar el dispositivo.\");\n        }\n      } catch (error) {\n        Alert.alert(\"Error al asignar dispositivo\", error.message || \"Ocurrió un error al asignar el dispositivo.\");\n      }\n    });\n    return function assignDeviceToUser(_x4, _x5) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var unassignDeviceFromUser = function () {\n    var _ref5 = _asyncToGenerator(function* (deviceId, userId) {\n      var userToken = yield AsyncStorage.getItem('userToken');\n      try {\n        var response = yield axios.post(`http://${global.ipDireccion}:3000/api/unassignDevicesFromUsers`, {\n          userIds: [userId]\n        }, {\n          headers: {\n            'Authorization': `Bearer ${userToken}`\n          }\n        });\n        if (response.status === 200) {\n          var updatedDevice = response.data;\n          setDevices(function (prevDevices) {\n            return prevDevices.map(function (device) {\n              return device._id === deviceId ? updatedDevice : device;\n            });\n          });\n          Alert.alert(\"Dispositivo desasignado exitosamente\");\n        } else {\n          Alert.alert(\"Error\", \"No se pudo desasignar el dispositivo.\");\n        }\n      } catch (error) {\n        Alert.alert(\"Error al desasignar dispositivo\", error.message || \"Ocurrió un error al desasignar el dispositivo.\");\n      }\n    });\n    return function unassignDeviceFromUser(_x6, _x7) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var deleteDevice = function () {\n    var _ref6 = _asyncToGenerator(function* (deviceId) {\n      try {\n        var response = yield DeviceService.deleteDevice(deviceId);\n        if (response.status === 200) {\n          setDevices(devices.filter(function (device) {\n            return device._id !== deviceId;\n          }));\n        } else {\n          console.error('Error deleting device:', response.status);\n        }\n      } catch (error) {\n        console.error('Error deleting device:', error);\n      }\n    });\n    return function deleteDevice(_x8) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var removeUser = function () {\n    var _ref7 = _asyncToGenerator(function* (userEmail) {\n      var userToken = yield AsyncStorage.getItem('userToken');\n      try {\n        var response = yield axios.delete(`http://${global.ipDireccion}:3000/api/admins/removeUser`, {\n          headers: {\n            'Authorization': `Bearer ${userToken}`\n          },\n          data: {\n            userEmail: userEmail\n          }\n        });\n        if (response.status === 200) {\n          Alert.alert(\"Éxito\", \"Usuario eliminado exitosamente.\");\n          loadData();\n        } else {\n          Alert.alert(\"Error\", \"No se pudo eliminar el usuario.\");\n        }\n      } catch (error) {\n        Alert.alert(\"Error\", error.message || \"Ocurrió un error al eliminar el usuario.\");\n      }\n    });\n    return function removeUser(_x9) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var assignUsersToSelectedDevice = function () {\n    var _ref8 = _asyncToGenerator(function* () {\n      var userToken = yield AsyncStorage.getItem('userToken');\n      try {\n        yield axios.post(`http://${global.ipDireccion}:3000/api/admins/devices/${selectedDevice._id}/assignUsers`, {\n          userIds: selectedUsers\n        }, {\n          headers: {\n            'Authorization': `Bearer ${userToken}`\n          }\n        });\n        Alert.alert(\"Usuarios asignados exitosamente\");\n        closeModal();\n        loadData();\n      } catch (error) {\n        Alert.alert(\"Error al asignar usuarios\", error.message || \"Ocurrió un error al asignar usuarios.\");\n      }\n    });\n    return function assignUsersToSelectedDevice() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var unaAssignUsersToSelectedDevice = function () {\n    var _ref9 = _asyncToGenerator(function* () {\n      var userToken = yield AsyncStorage.getItem('userToken');\n      try {\n        yield axios.post(`http://${global.ipDireccion}:3000/api/admins/devices/${selectedDevice._id}/unassignUsers`, {\n          userIds: selectedUsers\n        }, {\n          headers: {\n            'Authorization': `Bearer ${userToken}`\n          }\n        });\n        Alert.alert(\"Usuarios asignados exitosamente\");\n        closeModal();\n        loadData();\n      } catch (error) {\n        Alert.alert(\"Error al asignar usuarios\", error.message || \"Ocurrió un error al asignar usuarios.\");\n      }\n    });\n    return function unaAssignUsersToSelectedDevice() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n  return {\n    devices: devices,\n    users: users,\n    monitoringRequests: monitoringRequests,\n    isLoading: isLoading,\n    loadData: loadData,\n    setSelectedDevice: setSelectedDevice,\n    selectedDevice: selectedDevice,\n    addDevice: addDevice,\n    updateDevice: updateDevice,\n    assignDeviceToUser: assignDeviceToUser,\n    unassignDeviceFromUser: unassignDeviceFromUser,\n    removeUser: removeUser,\n    deleteDevice: deleteDevice,\n    assignUsersToSelectedDevice: assignUsersToSelectedDevice,\n    unaAssignUsersToSelectedDevice: unaAssignUsersToSelectedDevice\n  };\n};\nexport default useDeviceManagement;","map":{"version":3,"names":["React","useState","useEffect","useCallback","DeviceService","AsyncStorage","axios","useDeviceManagement","_useState","_useState2","_slicedToArray","devices","setDevices","_useState3","_useState4","users","setUsers","_useState5","_useState6","monitoringRequests","setMonitoringRequests","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","selectedDevice","setSelectedDevice","_useState11","_useState12","selectedUsers","setSelectedUsers","_useState13","_useState14","userEmail","setUserEmail","loadData","_asyncToGenerator","deviceResponse","fetchDevices","userResponse","fetchUsers","monitoringRequestResponse","fetchMonitoringRequests","status","data","console","error","addDevice","_ref2","deviceDetails","response","concat","_toConsumableArray","_x","apply","arguments","updateDevice","_ref3","deviceId","map","device","_id","_x2","_x3","assignDeviceToUser","_ref4","userId","userToken","getItem","post","global","ipDireccion","userIds","headers","updatedDevice","prevDevices","Alert","alert","message","_x4","_x5","unassignDeviceFromUser","_ref5","_x6","_x7","deleteDevice","_ref6","filter","_x8","removeUser","_ref7","delete","_x9","assignUsersToSelectedDevice","_ref8","closeModal","unaAssignUsersToSelectedDevice","_ref9"],"sources":["C:/Users/lofli/Downloads/integradora-misto/views/adminDashboard/hooks/useDeviceManagement.js"],"sourcesContent":["// useDeviceManagement.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport * as DeviceService from '../api';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\n\n\nconst useDeviceManagement = () => {\n    const [devices, setDevices] = useState([]);\n    const [users, setUsers] = useState([]);\n    const [monitoringRequests, setMonitoringRequests] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [selectedDevice, setSelectedDevice] = useState(null);\n    const [selectedUsers, setSelectedUsers] = useState([]);\n    const [userEmail, setUserEmail] = useState('');\n\n  // Carga inicial de dispositivos\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const deviceResponse = await DeviceService.fetchDevices();\n      const userResponse = await DeviceService.fetchUsers();\n      const monitoringRequestResponse = await DeviceService.fetchMonitoringRequests();\n      if (deviceResponse.status === 200) {\n        setDevices(deviceResponse.data);\n      } else {\n        console.error('Error fetching devices:', deviceResponse.status);\n      }\n      if (userResponse.status === 200) {\n        setUsers(userResponse.data);\n      } else {\n        console.error('Error fetching users:', userResponse.status);\n      }\n      if (monitoringRequestResponse.status === 200) {\n        setMonitoringRequests(monitoringRequestResponse.data);\n      } else {\n        console.error('Error fetching monitoring requests:', monitoringRequestResponse.status);\n      }\n    } catch (error) {\n      console.error('Error loading data:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Función para agregar un nuevo dispositivo\n  const addDevice = async (deviceDetails) => {\n    try {\n      const response = await DeviceService.addDevice(deviceDetails);\n      if (response.status === 201) {\n        setDevices([...devices, response.data]);\n      } else {\n        console.error('Error adding device:', response.status);\n      }\n    } catch (error) {\n      console.error('Error adding device:', error);\n    }\n  };\n\n  // Función para actualizar un dispositivo\n  const updateDevice = async (deviceId, deviceDetails) => {\n    try {\n      const response = await DeviceService.updateDevice(deviceId, deviceDetails);\n      if (response.status === 200) {\n        setDevices(devices.map((device) => (device._id === deviceId ? response.data : device)));\n      } else {\n        console.error('Error updating device:', response.status);\n      }\n    } catch (error) {\n      console.error('Error updating device:', error);\n    }\n  };\n\n  const assignDeviceToUser = async (deviceId, userId) => {\n    const userToken = await AsyncStorage.getItem('userToken');\n    try {\n      const response = await axios.post(\n        `http://${global.ipDireccion}:3000/api/admins/assignDevicesToUsers`,\n        { userIds: [userId] },\n        { headers: { 'Authorization': `Bearer ${userToken}` } }\n      );\n      if (response.status === 200) {\n        const updatedDevice = response.data;\n        setDevices(prevDevices => prevDevices.map(device =>\n          device._id === deviceId ? updatedDevice : device\n        ));\n        Alert.alert(\"Dispositivo asignado exitosamente\");\n      } else {\n        Alert.alert(\"Error\", \"No se pudo asignar el dispositivo.\");\n      }\n    } catch (error) {\n      Alert.alert(\"Error al asignar dispositivo\", error.message || \"Ocurrió un error al asignar el dispositivo.\");\n    }\n  };\n  \n  const unassignDeviceFromUser = async (deviceId, userId) => {\n    const userToken = await AsyncStorage.getItem('userToken');\n    try {\n      const response = await axios.post(\n        `http://${global.ipDireccion}:3000/api/unassignDevicesFromUsers`,\n        { userIds: [userId] },\n        { headers: { 'Authorization': `Bearer ${userToken}` } }\n      );\n      if (response.status === 200) {\n        const updatedDevice = response.data;\n        setDevices(prevDevices => prevDevices.map(device =>\n          device._id === deviceId ? updatedDevice : device\n        ));\n        Alert.alert(\"Dispositivo desasignado exitosamente\");\n      } else {\n        Alert.alert(\"Error\", \"No se pudo desasignar el dispositivo.\");\n      }\n    } catch (error) {\n      Alert.alert(\"Error al desasignar dispositivo\", error.message || \"Ocurrió un error al desasignar el dispositivo.\");\n    }\n  };\n  \n  \n\n  // Función para eliminar un dispositivo\n  const deleteDevice = async (deviceId) => {\n    try {\n      const response = await DeviceService.deleteDevice(deviceId);\n      if (response.status === 200) {\n        setDevices(devices.filter((device) => device._id !== deviceId));\n      } else {\n        console.error('Error deleting device:', response.status);\n      }\n    } catch (error) {\n      console.error('Error deleting device:', error);\n    }\n  };\n\n  const removeUser = async (userEmail) => {\n    const userToken = await AsyncStorage.getItem('userToken');\n    try {\n      // Nota: Axios.delete no incluye un body de manera directa, por lo que se usa el parámetro `data` en la configuración.\n      const response = await axios.delete(`http://${global.ipDireccion}:3000/api/admins/removeUser`, {\n        headers: { 'Authorization': `Bearer ${userToken}` },\n        data: { userEmail }, // Incluir `userEmail` en el cuerpo de la solicitud\n      });\n      if (response.status === 200) {\n        Alert.alert(\"Éxito\", \"Usuario eliminado exitosamente.\");\n        loadData(); // Recargar datos para reflejar los cambios\n      } else {\n        Alert.alert(\"Error\", \"No se pudo eliminar el usuario.\");\n      }\n    } catch (error) {\n      Alert.alert(\"Error\", error.message || \"Ocurrió un error al eliminar el usuario.\");\n    }\n  };\n  \n  \n  // Función para asignar usuarios al dispositivo seleccionado\n  const assignUsersToSelectedDevice = async () => {\n    const userToken = await AsyncStorage.getItem('userToken');\n    try {\n      await axios.post(\n        `http://${global.ipDireccion}:3000/api/admins/devices/${selectedDevice._id}/assignUsers`,\n        { userIds: selectedUsers },\n        { headers: { 'Authorization': `Bearer ${userToken}` } }\n      );\n      Alert.alert(\"Usuarios asignados exitosamente\");\n      closeModal();\n      loadData(); // Recargar la lista de dispositivos para reflejar los cambios\n    } catch (error) {\n      Alert.alert(\"Error al asignar usuarios\", error.message || \"Ocurrió un error al asignar usuarios.\");\n    }\n  };\n  \n  // Función para desasignar usuarios del dispositivo seleccionado\n  const unaAssignUsersToSelectedDevice = async () => {\n    const userToken = await AsyncStorage.getItem('userToken');\n    try {\n      await axios.post(\n        `http://${global.ipDireccion}:3000/api/admins/devices/${selectedDevice._id}/unassignUsers`,\n        { userIds: selectedUsers },\n        { headers: { 'Authorization': `Bearer ${userToken}` } }\n      );\n      Alert.alert(\"Usuarios asignados exitosamente\");\n      closeModal();\n      loadData(); // Recargar la lista de dispositivos para reflejar los cambios\n    } catch (error) {\n      Alert.alert(\"Error al asignar usuarios\", error.message || \"Ocurrió un error al asignar usuarios.\");\n    }\n  };\n\n\n  return {\n    devices,\n    users,\n    monitoringRequests,\n    isLoading,\n    loadData,\n    setSelectedDevice,\n    selectedDevice,\n    addDevice,\n    updateDevice,\n    assignDeviceToUser,\n    unassignDeviceFromUser,\n    removeUser,\n    deleteDevice,\n    assignUsersToSelectedDevice,\n    unaAssignUsersToSelectedDevice,\n  };\n};\n\nexport default useDeviceManagement;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}