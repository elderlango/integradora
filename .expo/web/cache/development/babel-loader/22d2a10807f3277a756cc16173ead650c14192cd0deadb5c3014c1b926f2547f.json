{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport NavWithTheme from \"./router/AppNavigator\";\nimport { ThemeProvider } from \"./components/theme/themeManager\";\nimport { loadFonts } from \"./styles/fonts\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as Notifications from 'expo-notifications';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nglobal.ipDireccion = '192.168.3.30';\nglobal.categories = ['GAS', 'ULTRASONICO', 'TEMPERATURA'];\nvar App = function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    fontsLoaded = _useState2[0],\n    setFontsLoaded = _useState2[1];\n  useEffect(function () {\n    loadFonts().then(function () {\n      return setFontsLoaded(true);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n    registerForPushNotificationsAsync();\n    var subscription = Notifications.addNotificationReceivedListener(function (notification) {\n      console.log(notification);\n    });\n    var responseSubscription = Notifications.addNotificationResponseReceivedListener(function (response) {\n      console.log(response);\n    });\n    return function () {\n      Notifications.removeNotificationSubscription(subscription);\n      Notifications.removeNotificationSubscription(responseSubscription);\n    };\n  }, []);\n  function registerForPushNotificationsAsync() {\n    return _registerForPushNotificationsAsync.apply(this, arguments);\n  }\n  function _registerForPushNotificationsAsync() {\n    _registerForPushNotificationsAsync = _asyncToGenerator(function* () {\n      var _yield$Notifications$ = yield Notifications.getPermissionsAsync(),\n        existingStatus = _yield$Notifications$.status;\n      var finalStatus = existingStatus;\n      if (existingStatus !== 'granted') {\n        var _yield$Notifications$2 = yield Notifications.requestPermissionsAsync(),\n          status = _yield$Notifications$2.status;\n        finalStatus = status;\n      }\n      if (finalStatus !== 'granted') {\n        alert('Failed to get push token for push notification!');\n        return;\n      }\n      var token = (yield Notifications.getExpoPushTokenAsync()).data;\n    });\n    return _registerForPushNotificationsAsync.apply(this, arguments);\n  }\n  if (!fontsLoaded) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#fff\"\n      })\n    });\n  }\n  return _jsx(ThemeProvider, {\n    children: _jsx(NavWithTheme, {})\n  });\n};\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","NavWithTheme","ThemeProvider","loadFonts","View","ActivityIndicator","Alert","Notifications","jsx","_jsx","global","ipDireccion","categories","App","_useState","_useState2","_slicedToArray","fontsLoaded","setFontsLoaded","then","catch","err","console","log","registerForPushNotificationsAsync","subscription","addNotificationReceivedListener","notification","responseSubscription","addNotificationResponseReceivedListener","response","removeNotificationSubscription","_registerForPushNotificationsAsync","apply","arguments","_asyncToGenerator","_yield$Notifications$","getPermissionsAsync","existingStatus","status","finalStatus","_yield$Notifications$2","requestPermissionsAsync","alert","token","getExpoPushTokenAsync","data","style","flex","justifyContent","alignItems","children","size","color"],"sources":["C:/Users/lofli/Downloads/integradora-misto/App.js"],"sourcesContent":["// app.js\nimport React, { useState, useEffect } from 'react';\nimport NavWithTheme from './router/AppNavigator';\nimport { ThemeProvider } from \"./components/theme/themeManager\";\n\nimport { loadFonts } from './styles/fonts';\nimport { View, ActivityIndicator, Alert } from 'react-native';\nimport * as Notifications from 'expo-notifications';\n\nglobal.ipDireccion = '192.168.3.30';\nglobal.categories = ['GAS', 'ULTRASONICO', 'TEMPERATURA'];\n\nconst App = () => {\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  useEffect(() => {\n    // Registra para notificaciones push\n\n    // Carga las fuentes y actualiza el estado cuando se complete la carga\n    loadFonts().then(() => setFontsLoaded(true)).catch(err => console.log(err));\n\n    registerForPushNotificationsAsync();\n\n    // Escuchas para notificaciones recibidas mientras la app está abierta\n    const subscription = Notifications.addNotificationReceivedListener(notification => {\n      console.log(notification);\n    });\n\n    // Escuchas para respuestas a notificaciones (usuario interactuó con la notificación)\n    const responseSubscription = Notifications.addNotificationResponseReceivedListener(response => {\n      console.log(response);\n    });\n\n    // Asegúrate de remover los listeners al desmontar el componente\n    return () => {\n      Notifications.removeNotificationSubscription(subscription);\n      Notifications.removeNotificationSubscription(responseSubscription);\n    };\n  }, []);\n\n  async function registerForPushNotificationsAsync() {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      alert('Failed to get push token for push notification!');\n      return;\n    }\n    const token = (await Notifications.getExpoPushTokenAsync()).data;\n    // Aquí puedes enviar el `token` a tu servidor si es necesario\n  }\n  \n\n  // Si las fuentes aún no se han cargado o el usuario no se ha autenticado, muestra un indicador de carga\n  if (!fontsLoaded) {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <ActivityIndicator size=\"large\" color=\"#fff\" />\n      </View>\n    );\n  }\n\n  // Una vez las fuentes están cargadas y el usuario está autenticado, muestra la navegación\n  return (\n    <ThemeProvider>\n      <NavWithTheme />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY;AACnB,SAASC,aAAa;AAEtB,SAASC,SAAS;AAAyB,OAAAC,IAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,KAAA;AAE3C,OAAO,KAAKC,aAAa,MAAM,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEpDC,MAAM,CAACC,WAAW,GAAG,cAAc;AACnCD,MAAM,CAACE,UAAU,GAAG,CAAC,KAAK,EAAE,aAAa,EAAE,aAAa,CAAC;AAEzD,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,IAAAC,SAAA,GAAsCf,QAAQ,CAAC,KAAK,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAElCf,SAAS,CAAC,YAAM;IAIdG,SAAS,CAAC,CAAC,CAACgB,IAAI,CAAC;MAAA,OAAMD,cAAc,CAAC,IAAI,CAAC;IAAA,EAAC,CAACE,KAAK,CAAC,UAAAC,GAAG;MAAA,OAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAAA,EAAC;IAE3EG,iCAAiC,CAAC,CAAC;IAGnC,IAAMC,YAAY,GAAGlB,aAAa,CAACmB,+BAA+B,CAAC,UAAAC,YAAY,EAAI;MACjFL,OAAO,CAACC,GAAG,CAACI,YAAY,CAAC;IAC3B,CAAC,CAAC;IAGF,IAAMC,oBAAoB,GAAGrB,aAAa,CAACsB,uCAAuC,CAAC,UAAAC,QAAQ,EAAI;MAC7FR,OAAO,CAACC,GAAG,CAACO,QAAQ,CAAC;IACvB,CAAC,CAAC;IAGF,OAAO,YAAM;MACXvB,aAAa,CAACwB,8BAA8B,CAACN,YAAY,CAAC;MAC1DlB,aAAa,CAACwB,8BAA8B,CAACH,oBAAoB,CAAC;IACpE,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAAC,SAEQJ,iCAAiCA,CAAA;IAAA,OAAAQ,kCAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,mCAAA;IAAAA,kCAAA,GAAAG,iBAAA,CAAhD,aAAmD;MACjD,IAAAC,qBAAA,SAAyC7B,aAAa,CAAC8B,mBAAmB,CAAC,CAAC;QAA5DC,cAAc,GAAAF,qBAAA,CAAtBG,MAAM;MACd,IAAIC,WAAW,GAAGF,cAAc;MAChC,IAAIA,cAAc,KAAK,SAAS,EAAE;QAChC,IAAAG,sBAAA,SAAyBlC,aAAa,CAACmC,uBAAuB,CAAC,CAAC;UAAxDH,MAAM,GAAAE,sBAAA,CAANF,MAAM;QACdC,WAAW,GAAGD,MAAM;MACtB;MACA,IAAIC,WAAW,KAAK,SAAS,EAAE;QAC7BG,KAAK,CAAC,iDAAiD,CAAC;QACxD;MACF;MACA,IAAMC,KAAK,GAAG,OAAOrC,aAAa,CAACsC,qBAAqB,CAAC,CAAC,EAAEC,IAAI;IAElE,CAAC;IAAA,OAAAd,kCAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAID,IAAI,CAACjB,WAAW,EAAE;IAChB,OACER,IAAA,CAACL,IAAI;MAAC2C,KAAK,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAC,QAAA,EACvE1C,IAAA,CAACJ,iBAAiB;QAAC+C,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC;MAAM,CAAE;IAAC,CAC3C,CAAC;EAEX;EAGA,OACE5C,IAAA,CAACP,aAAa;IAAAiD,QAAA,EACZ1C,IAAA,CAACR,YAAY,IAAE;EAAC,CACH,CAAC;AAEpB,CAAC;AAED,eAAeY,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}